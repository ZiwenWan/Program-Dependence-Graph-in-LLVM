digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x130b550 [shape=record,label="{\<\<ENTRY\>\> _Z2f1iii}"];
	Node0x130b550 -> Node0x130b5c0;
	Node0x130b550 -> Node0x130b630;
	Node0x130b550 -> Node0x130b700;
	Node0x130b550 -> Node0x130b6d0;
	Node0x130b550 -> Node0x130b6a0;
	Node0x130b550 -> Node0x130d240;
	Node0x130b550 -> Node0x130d2b0;
	Node0x130b5c0 [shape=record,label="{  %4 = alloca i32, align 4}"];
	Node0x130b630 [shape=record,label="{  %5 = alloca i32, align 4}"];
	Node0x130b700 [shape=record,label="{  %6 = alloca i32, align 4}"];
	Node0x130b6d0 [shape=record,label="{  store i32 %0, i32* %4, align 4}"];
	Node0x130b6a0 [shape=record,label="{  store i32 %1, i32* %5, align 4}"];
	Node0x130d240 [shape=record,label="{  store i32 %2, i32* %6, align 4}"];
	Node0x130d2b0 [shape=record,label="{  ret void}"];
	Node0x130f050 [shape=record,label="{  %4 = alloca i32, align 4}"];
	Node0x130f050 -> Node0x130f110[style=dotted,label = "{DEF_USE}" ];
	Node0x130f110 [shape=record,label="{  %7 = load i32, i32* %4, align 4}"];
	Node0x130f1f0 [shape=record,label="{  %5 = alloca i32, align 4}"];
	Node0x130f1f0 -> Node0x130f260[style=dotted,label = "{DEF_USE}" ];
	Node0x130f260 [shape=record,label="{  %8 = load i32, i32* %5, align 4}"];
	Node0x130f2d0 [shape=record,label="{  %6 = alloca i32, align 4}"];
	Node0x130f2d0 -> Node0x130f340[style=dotted,label = "{DEF_USE}" ];
	Node0x130f340 [shape=record,label="{  %9 = load i32, i32* %6, align 4}"];
	Node0x130f3d0 [shape=record,label="{  store i32 %0, i32* %4, align 4}"];
	Node0x130f3d0 -> Node0x130f110[style=dotted,label = "{RAW} "];
	Node0x130f870 [shape=record,label="{  store i32 %1, i32* %5, align 4}"];
	Node0x130f870 -> Node0x130f260[style=dotted,label = "{RAW} "];
	Node0x130f900 [shape=record,label="{  store i32 %2, i32* %6, align 4}"];
	Node0x130f900 -> Node0x130f340[style=dotted,label = "{RAW} "];
	Node0x130f0a0 [shape=record,label="{\<\<ENTRY\>\> _Z2f2iii}"];
	Node0x130f0a0 -> Node0x130f050;
	Node0x130f0a0 -> Node0x130f1f0;
	Node0x130f0a0 -> Node0x130f2d0;
	Node0x130f0a0 -> Node0x130f3d0;
	Node0x130f0a0 -> Node0x130f870;
	Node0x130f0a0 -> Node0x130f900;
	Node0x130f0a0 -> Node0x130f110;
	Node0x130f0a0 -> Node0x130f260;
	Node0x130f0a0 -> Node0x130f340;
	Node0x130f0a0 -> Node0x130faa0;
	Node0x130f0a0 -> Node0x130fb10;
	Node0x130faa0 [shape=record,label="{  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0), i32 %7, i32 %8, i32 %9)}"];
	Node0x130fb10 [shape=record,label="{  ret void}"];
	Node0x1311720 [shape=record,label="{  %4 = alloca i32, align 4}"];
	Node0x1311720 -> Node0x1311790[style=dotted,label = "{DEF_USE}" ];
	Node0x1311790 [shape=record,label="{  %7 = load i32, i32* %4, align 4}"];
	Node0x1311800 [shape=record,label="{  %5 = alloca i32, align 4}"];
	Node0x1311800 -> Node0x1311870[style=dotted,label = "{DEF_USE}" ];
	Node0x1311870 [shape=record,label="{  %8 = load i32, i32* %5, align 4}"];
	Node0x13118e0 [shape=record,label="{  %6 = alloca i32, align 4}"];
	Node0x13118e0 -> Node0x1311950[style=dotted,label = "{DEF_USE}" ];
	Node0x1311950 [shape=record,label="{  %9 = load i32, i32* %6, align 4}"];
	Node0x13119e0 [shape=record,label="{  store i32 %0, i32* %4, align 4}"];
	Node0x13119e0 -> Node0x1311790[style=dotted,label = "{RAW} "];
	Node0x1311130 [shape=record,label="{  store i32 %1, i32* %5, align 4}"];
	Node0x1311130 -> Node0x1311870[style=dotted,label = "{RAW} "];
	Node0x13111c0 [shape=record,label="{  store i32 %2, i32* %6, align 4}"];
	Node0x13111c0 -> Node0x1311950[style=dotted,label = "{RAW} "];
	Node0x1311250 [shape=record,label="{\<\<ENTRY\>\> _Z2f3iii}"];
	Node0x1311250 -> Node0x1311720;
	Node0x1311250 -> Node0x1311800;
	Node0x1311250 -> Node0x13118e0;
	Node0x1311250 -> Node0x13119e0;
	Node0x1311250 -> Node0x1311130;
	Node0x1311250 -> Node0x13111c0;
	Node0x1311250 -> Node0x1311790;
	Node0x1311250 -> Node0x1311870;
	Node0x1311250 -> Node0x1311950;
	Node0x1311250 -> Node0x13112e0;
	Node0x1311250 -> Node0x1311500;
	Node0x13112e0 [shape=record,label="{  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i32 %7, i32 %8, i32 %9)}"];
	Node0x1311500 [shape=record,label="{  ret void}"];
	Node0x1311690 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x1311690 -> Node0x13139f0;
	Node0x1311690 -> Node0x130f9b0;
	Node0x1311690 -> Node0x130fa50;
	Node0x1311690 -> Node0x130fa20;
	Node0x1311690 -> Node0x1313030;
	Node0x1311690 -> Node0x1313130;
	Node0x1311690 -> Node0x13131a0;
	Node0x13139f0 [shape=record,label="{  %1 = alloca i32, align 4}"];
	Node0x130f9b0 [shape=record,label="{  %2 = alloca void (i32, i32, i32)*, align 8}"];
	Node0x130f9b0 -> Node0x1313030[style=dotted,label = "{DEF_USE}" ];
	Node0x130fa50 [shape=record,label="{  store i32 0, i32* %1, align 4}"];
	Node0x130fa20 [shape=record,label="{  store void (i32, i32, i32)* @_Z2f2iii, void (i32, i32, i32)** %2, align 8}"];
	Node0x130fa20 -> Node0x1313030[style=dotted,label = "{RAW} "];
	Node0x1313030 [shape=record,label="{  %3 = load void (i32, i32, i32)*, void (i32, i32, i32)** %2, align 8}"];
	Node0x1313130 [shape=record,label="{  call void %3(i32 4, i32 5, i32 6)}"];
	Node0x13131a0 [shape=record,label="{  ret i32 0}"];
}
