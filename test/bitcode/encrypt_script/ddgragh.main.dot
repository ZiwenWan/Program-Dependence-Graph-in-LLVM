digraph "Data dependency graph for 'main' function" {
	label="Data dependency graph for 'main' function";

	Node0xe01220 [shape=record,label="{  %2 = alloca i8*, align 8}"];
	Node0xe01220 -> Node0xe01300;
	Node0xe01290 [shape=record,label="{  store i8* %0, i8** %2, align 8}"];
	Node0xe01290 -> Node0xe01300;
	Node0xe01300 [shape=record,label="{  %3 = load i8*, i8** %2, align 8}"];
	Node0xe02610 [shape=record,label="{  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* %3)}"];
	Node0xe02680 [shape=record,label="{  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0))}"];
	Node0xe01370 [shape=record,label="{  ret void}"];
	Node0xe04090 [shape=record,label="{  %2 = alloca i32, align 4}"];
	Node0xe04090 -> Node0xe04170;
	Node0xe04090 -> Node0xe05710;
	Node0xe04100 [shape=record,label="{  store i32 %0, i32* %2, align 4}"];
	Node0xe04100 -> Node0xe04170;
	Node0xe04100 -> Node0xe05710;
	Node0xe04170 [shape=record,label="{  %3 = load i32, i32* %2, align 4}"];
	Node0xe02710 [shape=record,label="{  %4 = sext i32 %3 to i64}"];
	Node0xe054c0 [shape=record,label="{  %5 = call noalias i8* @malloc(i64 %4) #6}"];
	Node0xe05530 [shape=record,label="{  store i8* %5, i8** @key, align 8}"];
	Node0xe05530 -> Node0xe07370;
	Node0xe055a0 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0xe055a0 -> Node0xe05680;
	Node0xe055a0 -> Node0xe07490;
	Node0xe055a0 -> Node0xe088c0;
	Node0xe05610 [shape=record,label="{  br label %6}"];
	Node0xe05680 [shape=record,label="{  %7 = load i32, i32* @i, align 4}"];
	Node0xe05680 -> Node0xe055a0;
	Node0xe05680 -> Node0xe05800;
	Node0xe05790 [shape=record,label="{  store i8 1, i8* %14, align 1}"];
	Node0xe05790 -> Node0xe05680;
	Node0xe05790 -> Node0xe07370;
	Node0xe05790 -> Node0xe07490;
	Node0xe05790 -> Node0xe088c0;
	Node0xe05800 [shape=record,label="{  store i32 %17, i32* @i, align 4}"];
	Node0xe05800 -> Node0xe05680;
	Node0xe05800 -> Node0xe07490;
	Node0xe05800 -> Node0xe088c0;
	Node0xe05710 [shape=record,label="{  %8 = load i32, i32* %2, align 4}"];
	Node0xe05710 -> Node0xe04170;
	Node0xe05710 -> Node0xe05710;
	Node0xe07290 [shape=record,label="{  %9 = icmp ult i32 %7, %8}"];
	Node0xe07300 [shape=record,label="{  br i1 %9, label %10, label %18}"];
	Node0xe07370 [shape=record,label="{  %11 = load i8*, i8** @key, align 8}"];
	Node0xe07370 -> Node0xe05530;
	Node0xe07370 -> Node0xe05790;
	Node0xe07490 [shape=record,label="{  %12 = load i32, i32* @i, align 4}"];
	Node0xe07490 -> Node0xe05680;
	Node0xe07500 [shape=record,label="{  %13 = zext i32 %12 to i64}"];
	Node0xe05760 [shape=record,label="{  %14 = getelementptr inbounds i8, i8* %11, i64 %13}"];
	Node0xe08850 [shape=record,label="{  br label %15}"];
	Node0xe088c0 [shape=record,label="{  %16 = load i32, i32* @i, align 4}"];
	Node0xe088c0 -> Node0xe05790;
	Node0xe08930 [shape=record,label="{  %17 = add i32 %16, 1}"];
	Node0xe073e0 [shape=record,label="{  br label %6}"];
	Node0xe08a40 [shape=record,label="{  ret void}"];
	Node0xe08cf0 [shape=record,label="{  %3 = alloca i8*, align 8}"];
	Node0xe08cf0 -> Node0xe0c110;
	Node0xe08d60 [shape=record,label="{  %4 = alloca i32, align 4}"];
	Node0xe08d60 -> Node0xe05870;
	Node0xe08d60 -> Node0xe0a530;
	Node0xe08dd0 [shape=record,label="{  store i8* %0, i8** %3, align 8}"];
	Node0xe08dd0 -> Node0xe0c110;
	Node0xe08e40 [shape=record,label="{  store i32 %1, i32* %4, align 4}"];
	Node0xe08e40 -> Node0xe05870;
	Node0xe08e40 -> Node0xe0a530;
	Node0xe05870 [shape=record,label="{  %5 = load i32, i32* %4, align 4}"];
	Node0xe05920 [shape=record,label="{  %6 = sext i32 %5 to i64}"];
	Node0xe05950 [shape=record,label="{  %7 = call noalias i8* @malloc(i64 %6) #6}"];
	Node0xe0a350 [shape=record,label="{  store i8* %7, i8** @ciphertext, align 8}"];
	Node0xe0a350 -> Node0xe0d650;
	Node0xe0a350 -> Node0xe0d9e0;
	Node0xe0a350 -> Node0xe0dcf0;
	Node0xe0a3c0 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0xe0a3c0 -> Node0xe0a4a0;
	Node0xe0a3c0 -> Node0xe0c1b0;
	Node0xe0a3c0 -> Node0xe0d650;
	Node0xe0a3c0 -> Node0xe0d820;
	Node0xe0a3c0 -> Node0xe0d9e0;
	Node0xe0a3c0 -> Node0xe0dd60;
	Node0xe0a3c0 -> Node0xe0df70;
	Node0xe0a430 [shape=record,label="{  br label %8}"];
	Node0xe0a4a0 [shape=record,label="{  %9 = load i32, i32* @i, align 4}"];
	Node0xe0a4a0 -> Node0xe0a3c0;
	Node0xe0a4a0 -> Node0xe0a620;
	Node0xe0a5b0 [shape=record,label="{  store i8 %26, i8* %30, align 1}"];
	Node0xe0a5b0 -> Node0xe0a4a0;
	Node0xe0a5b0 -> Node0xe0c1b0;
	Node0xe0a5b0 -> Node0xe0d650;
	Node0xe0a5b0 -> Node0xe0d590;
	Node0xe0a5b0 -> Node0xe0d820;
	Node0xe0a5b0 -> Node0xe0d9e0;
	Node0xe0a5b0 -> Node0xe0dcf0;
	Node0xe0a5b0 -> Node0xe0dd60;
	Node0xe0a5b0 -> Node0xe0df70;
	Node0xe0a620 [shape=record,label="{  store i32 %33, i32* @i, align 4}"];
	Node0xe0a620 -> Node0xe0a4a0;
	Node0xe0a620 -> Node0xe0c1b0;
	Node0xe0a620 -> Node0xe0d650;
	Node0xe0a620 -> Node0xe0d820;
	Node0xe0a620 -> Node0xe0d9e0;
	Node0xe0a620 -> Node0xe0dd60;
	Node0xe0a620 -> Node0xe0df70;
	Node0xe0a530 [shape=record,label="{  %10 = load i32, i32* %4, align 4}"];
	Node0xe0a530 -> Node0xe05870;
	Node0xe0a530 -> Node0xe0a530;
	Node0xe0c030 [shape=record,label="{  %11 = icmp ult i32 %9, %10}"];
	Node0xe0c0a0 [shape=record,label="{  br i1 %11, label %12, label %34}"];
	Node0xe0c110 [shape=record,label="{  %13 = load i8*, i8** %3, align 8}"];
	Node0xe0c110 -> Node0xe08dd0;
	Node0xe0c110 -> Node0xe0c110;
	Node0xe0c1b0 [shape=record,label="{  %14 = load i32, i32* @i, align 4}"];
	Node0xe0c1b0 -> Node0xe0a4a0;
	Node0xe0a560 [shape=record,label="{  %15 = zext i32 %14 to i64}"];
	Node0xe0d5e0 [shape=record,label="{  %16 = getelementptr inbounds i8, i8* %13, i64 %15}"];
	Node0xe0d5e0 -> Node0xe0d650;
	Node0xe0d650 [shape=record,label="{  %17 = load i8, i8* %16, align 1}"];
	Node0xe0d6c0 [shape=record,label="{  %18 = sext i8 %17 to i32}"];
	Node0xe0d590 [shape=record,label="{  %19 = load i8*, i8** @key, align 8}"];
	Node0xe0d590 -> Node0xe0a5b0;
	Node0xe0d820 [shape=record,label="{  %20 = load i32, i32* @i, align 4}"];
	Node0xe0d820 -> Node0xe0a4a0;
	Node0xe0d890 [shape=record,label="{  %21 = zext i32 %20 to i64}"];
	Node0xe0d8c0 [shape=record,label="{  %22 = getelementptr inbounds i8, i8* %19, i64 %21}"];
	Node0xe0d8c0 -> Node0xe0d9e0;
	Node0xe0d9e0 [shape=record,label="{  %23 = load i8, i8* %22, align 1}"];
	Node0xe0da50 [shape=record,label="{  %24 = sext i8 %23 to i32}"];
	Node0xe0d790 [shape=record,label="{  %25 = xor i32 %18, %24}"];
	Node0xe0da80 [shape=record,label="{  %26 = trunc i32 %25 to i8}"];
	Node0xe0dcf0 [shape=record,label="{  %27 = load i8*, i8** @ciphertext, align 8}"];
	Node0xe0dcf0 -> Node0xe0a350;
	Node0xe0dcf0 -> Node0xe0a5b0;
	Node0xe0dd60 [shape=record,label="{  %28 = load i32, i32* @i, align 4}"];
	Node0xe0dd60 -> Node0xe0a4a0;
	Node0xe0de20 [shape=record,label="{  %29 = zext i32 %28 to i64}"];
	Node0xe0de90 [shape=record,label="{  %30 = getelementptr inbounds i8, i8* %27, i64 %29}"];
	Node0xe0df00 [shape=record,label="{  br label %31}"];
	Node0xe0df70 [shape=record,label="{  %32 = load i32, i32* @i, align 4}"];
	Node0xe0df70 -> Node0xe0a5b0;
	Node0xe0dfe0 [shape=record,label="{  %33 = add i32 %32, 1}"];
	Node0xe0e170 [shape=record,label="{  br label %8}"];
	Node0xe0d8f0 [shape=record,label="{  ret void}"];
	Node0xe0ebe0 [shape=record,label="{  %1 = alloca i32, align 4}"];
	Node0xe0ec50 [shape=record,label="{  %2 = alloca [20 x i8], align 16}"];
	Node0xe0ecc0 [shape=record,label="{  %3 = alloca [1024 x i8], align 16}"];
	Node0xe0ed30 [shape=record,label="{  store i32 0, i32* %1, align 4}"];
	Node0xe0eda0 [shape=record,label="{  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0))}"];
	Node0xe0ee10 [shape=record,label="{  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i32 0, i32 0}"];
	Node0xe0ee80 [shape=record,label="{  %6 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* %5)}"];
	Node0xe0eef0 [shape=record,label="{  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i32 0, i32 0}"];
	Node0xe0ef60 [shape=record,label="{  call void @_Z7greeterPc(i8* %7)}"];
	Node0xe0efd0 [shape=record,label="{  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0))}"];
	Node0xe0f040 [shape=record,label="{  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0}"];
	Node0xe0f0b0 [shape=record,label="{  %10 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* %9)}"];
	Node0xe0f120 [shape=record,label="{  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0}"];
	Node0xe0f190 [shape=record,label="{  %12 = call i64 @strlen(i8* %11) #6}"];
	Node0xe0f200 [shape=record,label="{  %13 = trunc i64 %12 to i32}"];
	Node0xe0f270 [shape=record,label="{  call void @_Z7initkeyi(i32 %13)}"];
	Node0xe0f2e0 [shape=record,label="{  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0}"];
	Node0xe0f350 [shape=record,label="{  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0}"];
	Node0xe0f3c0 [shape=record,label="{  %16 = call i64 @strlen(i8* %15) #6}"];
	Node0xe0f430 [shape=record,label="{  %17 = trunc i64 %16 to i32}"];
	Node0xe0f4a0 [shape=record,label="{  call void @_Z7encryptPci(i8* %14, i32 %17)}"];
	Node0xe0f510 [shape=record,label="{  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0))}"];
	Node0xe0f580 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0xe0f580 -> Node0xe0f660;
	Node0xe0f580 -> Node0xe12580;
	Node0xe0f580 -> Node0xe13960;
	Node0xe0f580 -> Node0xe13b10;
	Node0xe0f5f0 [shape=record,label="{  br label %19}"];
	Node0xe0f660 [shape=record,label="{  %20 = load i32, i32* @i, align 4}"];
	Node0xe0f660 -> Node0xe0f580;
	Node0xe0f660 -> Node0xe0f6d0;
	Node0xe0f6d0 [shape=record,label="{  store i32 %35, i32* @i, align 4}"];
	Node0xe0f6d0 -> Node0xe0f660;
	Node0xe0f6d0 -> Node0xe12580;
	Node0xe0f6d0 -> Node0xe13960;
	Node0xe0f6d0 -> Node0xe13b10;
	Node0xe121f0 [shape=record,label="{  %21 = zext i32 %20 to i64}"];
	Node0xe12260 [shape=record,label="{  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0}"];
	Node0xe122d0 [shape=record,label="{  %23 = call i64 @strlen(i8* %22) #6}"];
	Node0xe12340 [shape=record,label="{  %24 = icmp ult i64 %21, %23}"];
	Node0xe123b0 [shape=record,label="{  br i1 %24, label %25, label %36}"];
	Node0xe12420 [shape=record,label="{  %26 = load i8*, i8** @ciphertext, align 8}"];
	Node0xe12420 -> Node0xe0f510;
	Node0xe12420 -> Node0xe12490;
	Node0xe12490 [shape=record,label="{  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %31)}"];
	Node0xe12580 [shape=record,label="{  %27 = load i32, i32* @i, align 4}"];
	Node0xe12580 -> Node0xe0f660;
	Node0xe137e0 [shape=record,label="{  %28 = zext i32 %27 to i64}"];
	Node0xe138f0 [shape=record,label="{  %29 = getelementptr inbounds i8, i8* %26, i64 %28}"];
	Node0xe138f0 -> Node0xe13960;
	Node0xe13960 [shape=record,label="{  %30 = load i8, i8* %29, align 1}"];
	Node0xe139d0 [shape=record,label="{  %31 = sext i8 %30 to i32}"];
	Node0xe13aa0 [shape=record,label="{  br label %33}"];
	Node0xe13b10 [shape=record,label="{  %34 = load i32, i32* @i, align 4}"];
	Node0xe13b10 -> Node0xe12490;
	Node0xe13b80 [shape=record,label="{  %35 = add i32 %34, 1}"];
	Node0xe13bf0 [shape=record,label="{  br label %19}"];
	Node0xe13c60 [shape=record,label="{  ret i32 0}"];
}
