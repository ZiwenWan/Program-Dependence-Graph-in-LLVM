digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";
graph [ splines=true ]
	Node0x80ec3c0 [shape=record,label="{  %X.addr = alloca i32*, align 8}"];
	Node0x80ec3c0 -> Node0x80ec430[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec3c0 -> Node0x80ec4a0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec430 [shape=record,label="{  store i32* %X, i32** %X.addr, align 8}"];
	Node0x80ec430 -> Node0x80ec4a0[style=dotted,label = "{RAW} X.addr"];
	Node0x80ec4a0 [shape=record,label="{  %1 = load i32*, i32** %X.addr, align 8, !dbg !19}"];
	Node0x80ec4a0 -> Node0x80ec7f0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec4a0 -> Node0x80ec8f0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec390 [shape=record,label="{GLOBAL_VALUE:@Global = global i32 10, align 4, !dbg !0}"];
	Node0x80ec390 -> Node0x80ec5b0[style=dotted];
	Node0x80ec390 -> Node0x80ec510[style=dotted];
	Node0x80ec5b0 [shape=record,label="{  %0 = load i32, i32* @Global, align 4, !dbg !17}"];
	Node0x80ec5b0 -> Node0x80ebd50[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec510 [shape=record,label="{  %0 = load i32, i32* @Global, align 4, !dbg !17}"];
	Node0x80ec510 -> Node0x80ec6e0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec6e0 [shape=record,label="{  %sub = sub nsw i32 %0, 1, !dbg !18}"];
	Node0x80ec6e0 -> Node0x80ec750[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec750 [shape=record,label="{  %add = add nsw i32 %2, %sub, !dbg !20}"];
	Node0x80ec750 -> Node0x80ec8f0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec7f0 [shape=record,label="{  %2 = load i32, i32* %1, align 4, !dbg !20}"];
	Node0x80ec7f0 -> Node0x80ec750[style=dotted,label = "{DEF_USE}" ];
	Node0x80ec8f0 [shape=record,label="{  store i32 %add, i32* %1, align 4, !dbg !20}"];
	Node0x80ec8f0 -> Node0x80ec510[style=dotted,label = "{RAW} Global"];
	Node0x80ec8f0 -> Node0x80ec7f0[style=dotted,label = "{RAW} "];
	Node0x80eca40 [shape=record,label="{\<\<ENTRY\>\> fun2}"];
	Node0x80eca40 -> Node0x80ec3c0;
	Node0x80eca40 -> Node0x80ec430;
	Node0x80eca40 -> Node0x80ecae0;
	Node0x80eca40 -> Node0x80ec510;
	Node0x80eca40 -> Node0x80ec6e0;
	Node0x80eca40 -> Node0x80ec4a0;
	Node0x80eca40 -> Node0x80ec7f0;
	Node0x80eca40 -> Node0x80ec750;
	Node0x80eca40 -> Node0x80ec8f0;
	Node0x80eca40 -> Node0x80ecab0;
	Node0x80eca40 -> Node0x80ee820[style=dashed, color="blue"];
	Node0x80eca40 -> Node0x80ee920[style=dashed, color="blue"];
	Node0x80ecae0 [shape=record,label="{  call void @llvm.dbg.declare(metadata i32** %X.addr, metadata !15, metadata !DIExpression()), !dbg !16}"];
	Node0x80ecab0 [shape=record,label="{  ret void, !dbg !21}"];
	Node0x80ebd80 [shape=record,label="{  %X.addr = alloca i32*, align 8}"];
	Node0x80ebd80 -> Node0x80ebdf0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebd80 -> Node0x80ebe60[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebdf0 [shape=record,label="{  store i32* %X, i32** %X.addr, align 8}"];
	Node0x80ebdf0 -> Node0x80ebe60[style=dotted,label = "{RAW} X.addr"];
	Node0x80ebe60 [shape=record,label="{  %1 = load i32*, i32** %X.addr, align 8, !dbg !18}"];
	Node0x80ebe60 -> Node0x80ebf70[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebe60 -> Node0x80ebfa0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebd50 [shape=record,label="{  %add = add nsw i32 %2, %0, !dbg !19}"];
	Node0x80ebd50 -> Node0x80ebfa0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebf70 [shape=record,label="{  %2 = load i32, i32* %1, align 4, !dbg !19}"];
	Node0x80ebf70 -> Node0x80ebd50[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebfa0 [shape=record,label="{  store i32 %add, i32* %1, align 4, !dbg !19}"];
	Node0x80ebfa0 -> Node0x80ec5b0[style=dotted,label = "{RAW} Global"];
	Node0x80ebfa0 -> Node0x80ebf70[style=dotted,label = "{RAW} "];
	Node0x80eba70 [shape=record,label="{\<\<ENTRY\>\> fun}"];
	Node0x80eba70 -> Node0x80ebd80;
	Node0x80eba70 -> Node0x80ebdf0;
	Node0x80eba70 -> Node0x80ebb10;
	Node0x80eba70 -> Node0x80ec5b0;
	Node0x80eba70 -> Node0x80ebe60;
	Node0x80eba70 -> Node0x80ebf70;
	Node0x80eba70 -> Node0x80ebd50;
	Node0x80eba70 -> Node0x80ebfa0;
	Node0x80eba70 -> Node0x80ebae0;
	Node0x80eba70 -> Node0x80ef1e0[style=dashed, color="blue"];
	Node0x80eba70 -> Node0x80ef2e0[style=dashed, color="blue"];
	Node0x80ebb10 [shape=record,label="{  call void @llvm.dbg.declare(metadata i32** %X.addr, metadata !23, metadata !DIExpression()), !dbg !24}"];
	Node0x80ebae0 [shape=record,label="{  ret void, !dbg !20}"];
	Node0x80ee1b0 [shape=record,label="{  %L.addr = alloca %struct.list*, align 8}"];
	Node0x80ee1b0 -> Node0x80eac20[style=dotted,label = "{DEF_USE}" ];
	Node0x80ee1b0 -> Node0x80eac90[style=dotted,label = "{DEF_USE}" ];
	Node0x80eac20 [shape=record,label="{  store %struct.list* %L, %struct.list** %L.addr, align 8}"];
	Node0x80eac20 -> Node0x80eac90[style=dotted,label = "{RAW} L.addr"];
	Node0x80eac90 [shape=record,label="{  %1 = load %struct.list*, %struct.list** %L.addr, align 8, !dbg !27}"];
	Node0x80eac90 -> Node0x80eaef0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ead30 [shape=record,label="{  %FP.addr = alloca void (i32*)*, align 8}"];
	Node0x80ead30 -> Node0x80eada0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ead30 -> Node0x80eae10[style=dotted,label = "{DEF_USE}" ];
	Node0x80eada0 [shape=record,label="{  store void (i32*)* %FP, void (i32*)** %FP.addr, align 8}"];
	Node0x80eada0 -> Node0x80eae10[style=dotted,label = "{RAW} FP.addr"];
	Node0x80eae10 [shape=record,label="{  %0 = load void (i32*)*, void (i32*)** %FP.addr, align 8, !dbg !26}"];
	Node0x80eae10 -> Node0x80ebba0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ebba0 [shape=record,label="{  call void %0(i32* %Data), !dbg !26}"];
	Node0x80ebba0 -> Node0x80eca40;
	Node0x80ebba0 -> Node0x80ef6e0[style=dashed, color="blue"];
	Node0x80ebba0 -> Node0x80ef680[style=dashed, color="blue"];
	Node0x80ebba0 -> Node0x80eba70;
	Node0x80eaef0 [shape=record,label="{  %Data = getelementptr inbounds %struct.list, %struct.list* %1, i32 0, i32 0, !dbg !28}"];
	Node0x80eaef0 -> Node0x80ebba0[style=dotted,label = "{DEF_USE}" ];
	Node0x80eaef0 -> Node0x80ef6e0[style=dashed, color="blue"];
	Node0x80ee820 [shape=record,color="blue",label="{FORMAL_IN: 0 i32*}"];
	Node0x80ee820 -> Node0x80ee890[style=dashed, color="blue"];
	Node0x80ee820 -> Node0x80ee920[style=dashed, color="blue"];
	Node0x80ee820 -> Node0x80ec430[style=dotted, label = "{data_g}"];
	Node0x80ee890 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80ee890 -> Node0x80eb880[style=dashed, color="blue"];
	Node0x80ee920 [shape=record,color="blue",label="{FORMAL_OUT: 0 i32*}"];
	Node0x80ee920 -> Node0x80eb880[style=dashed, color="blue"];
	Node0x80ee920 -> Node0x80ef680[style=dashed, color="blue"];
	Node0x80eb880 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80eb880 -> Node0x80efba0[style=dashed, color="blue"];
	Node0x80ef1e0 [shape=record,color="blue",label="{FORMAL_IN: 0 i32*}"];
	Node0x80ef1e0 -> Node0x80ef250[style=dashed, color="blue"];
	Node0x80ef1e0 -> Node0x80ef2e0[style=dashed, color="blue"];
	Node0x80ef1e0 -> Node0x80ebdf0[style=dotted, label = "{data_g}"];
	Node0x80ef250 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80ef250 -> Node0x80ef350[style=dashed, color="blue"];
	Node0x80ef2e0 [shape=record,color="blue",label="{FORMAL_OUT: 0 i32*}"];
	Node0x80ef2e0 -> Node0x80ef350[style=dashed, color="blue"];
	Node0x80ef2e0 -> Node0x80ef680[style=dashed, color="blue"];
	Node0x80ef350 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80ef350 -> Node0x80efba0[style=dashed, color="blue"];
	Node0x80ef6e0 [shape=record,color="blue",label="{ACTUAL_IN: 0 i32*}"];
	Node0x80ef6e0 -> Node0x80ef620[style=dashed, color="blue"];
	Node0x80ef6e0 -> Node0x80ee820[style=dashed, color="blue"];
	Node0x80ef6e0 -> Node0x80ef1e0[style=dashed, color="blue"];
	Node0x80ef620 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80ef620 -> Node0x80ee890[style=dashed, color="blue"];
	Node0x80ef620 -> Node0x80ef250[style=dashed, color="blue"];
	Node0x80ef680 [shape=record,color="blue",label="{ACTUAL_OUT: 0 i32*}"];
	Node0x80ef680 -> Node0x80efba0[style=dashed, color="blue"];
	Node0x80efba0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80ef5d0 [shape=record,label="{\<\<ENTRY\>\> accessF}"];
	Node0x80ef5d0 -> Node0x80ee1b0;
	Node0x80ef5d0 -> Node0x80ead30;
	Node0x80ef5d0 -> Node0x80eac20;
	Node0x80ef5d0 -> Node0x80e97f0;
	Node0x80ef5d0 -> Node0x80eada0;
	Node0x80ef5d0 -> Node0x80effd0;
	Node0x80ef5d0 -> Node0x80eae10;
	Node0x80ef5d0 -> Node0x80eac90;
	Node0x80ef5d0 -> Node0x80eaef0;
	Node0x80ef5d0 -> Node0x80ebba0;
	Node0x80ef5d0 -> Node0x80eff40;
	Node0x80ef5d0 -> Node0x80f2070[style=dashed, color="blue"];
	Node0x80ef5d0 -> Node0x80f2170[style=dashed, color="blue"];
	Node0x80ef5d0 -> Node0x80f2270[style=dashed, color="blue"];
	Node0x80ef5d0 -> Node0x80f2520[style=dashed, color="blue"];
	Node0x80e97f0 [shape=record,label="{  call void @llvm.dbg.declare(metadata %struct.list** %L.addr, metadata !37, metadata !DIExpression()), !dbg !38}"];
	Node0x80effd0 [shape=record,label="{  call void @llvm.dbg.declare(metadata void (i32*)** %FP.addr, metadata !39, metadata !DIExpression()), !dbg !40}"];
	Node0x80eff40 [shape=record,label="{  ret void, !dbg !29}"];
	Node0x80ecf80 [shape=record,label="{  %L.addr = alloca %struct.list*, align 8}"];
	Node0x80ecf80 -> Node0x80ecff0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ecf80 -> Node0x80ed060[style=dotted,label = "{DEF_USE}" ];
	Node0x80ecf80 -> Node0x80ed100[style=dotted,label = "{DEF_USE}" ];
	Node0x80ecff0 [shape=record,label="{  store %struct.list* %L, %struct.list** %L.addr, align 8}"];
	Node0x80ecff0 -> Node0x80ed060[style=dotted,label = "{RAW} L.addr"];
	Node0x80ecff0 -> Node0x80ed100[style=dotted,label = "{RAW} L.addr"];
	Node0x80ed060 [shape=record,label="{  %0 = load %struct.list*, %struct.list** %L.addr, align 8, !dbg !20}"];
	Node0x80ed060 -> Node0x80ed0d0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ed060 -> Node0x80f2920[style=dashed, color="blue"];
	Node0x80ed100 [shape=record,label="{  %1 = load %struct.list*, %struct.list** %L.addr, align 8, !dbg !22}"];
	Node0x80ed100 -> Node0x80f2bc0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ed100 -> Node0x80f4080[style=dashed, color="blue"];
	Node0x80ed0d0 [shape=record,label="{  call void @accessF(%struct.list* %0, void (i32*)* @fun), !dbg !21}"];
	Node0x80ed0d0 -> Node0x80ef5d0;
	Node0x80ed0d0 -> Node0x80f2920[style=dashed, color="blue"];
	Node0x80ed0d0 -> Node0x80f29b0[style=dashed, color="blue"];
	Node0x80ed0d0 -> Node0x80f2b00[style=dashed, color="blue"];
	Node0x80ed0d0 -> Node0x80f2b30[style=dashed, color="blue"];
	Node0x80f2070 [shape=record,color="blue",label="{FORMAL_IN: 0 %struct.list*}"];
	Node0x80f2070 -> Node0x80f20e0[style=dashed, color="blue"];
	Node0x80f2070 -> Node0x80f2170[style=dashed, color="blue"];
	Node0x80f2070 -> Node0x80eac20[style=dotted, label = "{data_g}"];
	Node0x80f20e0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f20e0 -> Node0x80f21e0[style=dashed, color="blue"];
	Node0x80f20e0 -> Node0x80eaef0[style=dotted, label="{S_FIELD}", color="red", penwidth="2.0"];
	Node0x80f2170 [shape=record,color="blue",label="{FORMAL_OUT: 0 %struct.list*}"];
	Node0x80f2170 -> Node0x80f21e0[style=dashed, color="blue"];
	Node0x80f2170 -> Node0x80f29b0[style=dashed, color="blue"];
	Node0x80f2170 -> Node0x80ee9d0[style=dashed, color="blue"];
	Node0x80f21e0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f21e0 -> Node0x80f2ad0[style=dashed, color="blue"];
	Node0x80f21e0 -> Node0x80eea40[style=dashed, color="blue"];
	Node0x80f2270 [shape=record,color="blue",label="{FORMAL_IN: 1 void (i32*)*}"];
	Node0x80f2270 -> Node0x80f2520[style=dashed, color="blue"];
	Node0x80f2270 -> Node0x80eada0[style=dotted, label = "{data_g}"];
	Node0x80f2520 [shape=record,color="blue",label="{FORMAL_OUT: 1 void (i32*)*}"];
	Node0x80f2520 -> Node0x80f2b30[style=dashed, color="blue"];
	Node0x80f2520 -> Node0x80eeb70[style=dashed, color="blue"];
	Node0x80f2920 [shape=record,color="blue",label="{ACTUAL_IN: 0 %struct.list*}"];
	Node0x80f2920 -> Node0x80f2980[style=dashed, color="blue"];
	Node0x80f2920 -> Node0x80f2070[style=dashed, color="blue"];
	Node0x80f2980 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f2980 -> Node0x80f20e0[style=dashed, color="blue"];
	Node0x80f29b0 [shape=record,color="blue",label="{ACTUAL_OUT: 0 %struct.list*}"];
	Node0x80f29b0 -> Node0x80f2ad0[style=dashed, color="blue"];
	Node0x80f2ad0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f2b00 [shape=record,color="blue",label="{ACTUAL_IN: 1 void (i32*)*}"];
	Node0x80f2b00 -> Node0x80f2270[style=dashed, color="blue"];
	Node0x80f2b30 [shape=record,color="blue",label="{ACTUAL_OUT: 1 void (i32*)*}"];
	Node0x80f2bc0 [shape=record,label="{  call void @accessF(%struct.list* %1, void (i32*)* @fun2), !dbg !23}"];
	Node0x80f2bc0 -> Node0x80ef5d0;
	Node0x80f2bc0 -> Node0x80f4080[style=dashed, color="blue"];
	Node0x80f2bc0 -> Node0x80ee9d0[style=dashed, color="blue"];
	Node0x80f2bc0 -> Node0x80eeab0[style=dashed, color="blue"];
	Node0x80f2bc0 -> Node0x80eeb70[style=dashed, color="blue"];
	Node0x80f4080 [shape=record,color="blue",label="{ACTUAL_IN: 0 %struct.list*}"];
	Node0x80f4080 -> Node0x80f24b0[style=dashed, color="blue"];
	Node0x80f4080 -> Node0x80f2070[style=dashed, color="blue"];
	Node0x80f24b0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f24b0 -> Node0x80f20e0[style=dashed, color="blue"];
	Node0x80ee9d0 [shape=record,color="blue",label="{ACTUAL_OUT: 0 %struct.list*}"];
	Node0x80ee9d0 -> Node0x80eea40[style=dashed, color="blue"];
	Node0x80eea40 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80eeab0 [shape=record,color="blue",label="{ACTUAL_IN: 1 void (i32*)*}"];
	Node0x80eeab0 -> Node0x80f2270[style=dashed, color="blue"];
	Node0x80eeb70 [shape=record,color="blue",label="{ACTUAL_OUT: 1 void (i32*)*}"];
	Node0x80f46a0 [shape=record,label="{\<\<ENTRY\>\> passF}"];
	Node0x80f46a0 -> Node0x80ecf80;
	Node0x80f46a0 -> Node0x80ecff0;
	Node0x80f46a0 -> Node0x80f4740;
	Node0x80f46a0 -> Node0x80ed060;
	Node0x80f46a0 -> Node0x80ed0d0;
	Node0x80f46a0 -> Node0x80ed100;
	Node0x80f46a0 -> Node0x80f2bc0;
	Node0x80f46a0 -> Node0x80f4710;
	Node0x80f46a0 -> Node0x80f6ab0[style=dashed, color="blue"];
	Node0x80f46a0 -> Node0x80f6bb0[style=dashed, color="blue"];
	Node0x80f4740 [shape=record,label="{  call void @llvm.dbg.declare(metadata %struct.list** %L.addr, metadata !48, metadata !DIExpression()), !dbg !49}"];
	Node0x80f4710 [shape=record,label="{  ret void, !dbg !24}"];
	Node0x80ed360 [shape=record,label="{  %X = alloca %struct.list*, align 8}"];
	Node0x80ed360 -> Node0x80f1970[style=dotted,label = "{DEF_USE}" ];
	Node0x80ed360 -> Node0x80f19e0[style=dotted,label = "{DEF_USE}" ];
	Node0x80f1970 [shape=record,label="{  store %struct.list* %0, %struct.list** %X, align 8, !dbg !19}"];
	Node0x80f1970 -> Node0x80f19e0[style=dotted,label = "{RAW} X"];
	Node0x80f19e0 [shape=record,label="{  %3 = load %struct.list*, %struct.list** %X, align 8, !dbg !24}"];
	Node0x80f19e0 -> Node0x80f6250[style=dotted,label = "{DEF_USE}" ];
	Node0x80f19e0 -> Node0x80f7950[style=dashed, color="blue"];
	Node0x80e9840 [shape=record,label="{  %Y = alloca %struct.list*, align 8}"];
	Node0x80e9840 -> Node0x80f1ac0[style=dotted,label = "{DEF_USE}" ];
	Node0x80f1ac0 [shape=record,label="{  store %struct.list* %2, %struct.list** %Y, align 8, !dbg !22}"];
	Node0x80f15b0 [shape=record,label="{  %call = call noalias i8* @malloc(i64 4) #3, !dbg !20}"];
	Node0x80f15b0 -> Node0x80f6080[style=dotted,label = "{DEF_USE}" ];
	Node0x80f6080 [shape=record,label="{  %0 = bitcast i8* %call to %struct.list*, !dbg !20}"];
	Node0x80f6080 -> Node0x80f1970[style=dotted,label = "{DEF_USE}" ];
	Node0x80f6130 [shape=record,label="{  %1 = alloca i8, i64 4, align 16, !dbg !23}"];
	Node0x80f6130 -> Node0x80f61a0[style=dotted,label = "{DEF_USE}" ];
	Node0x80f61a0 [shape=record,label="{  %2 = bitcast i8* %1 to %struct.list*, !dbg !23}"];
	Node0x80f61a0 -> Node0x80f1ac0[style=dotted,label = "{DEF_USE}" ];
	Node0x80f6250 [shape=record,label="{  call void @passF(%struct.list* %3), !dbg !25}"];
	Node0x80f6250 -> Node0x80f46a0;
	Node0x80f6250 -> Node0x80f7950[style=dashed, color="blue"];
	Node0x80f6250 -> Node0x80f6ef0[style=dashed, color="blue"];
	Node0x80f6ab0 [shape=record,color="blue",label="{FORMAL_IN: 0 %struct.list*}"];
	Node0x80f6ab0 -> Node0x80f6b20[style=dashed, color="blue"];
	Node0x80f6ab0 -> Node0x80f6bb0[style=dashed, color="blue"];
	Node0x80f6ab0 -> Node0x80ecff0[style=dotted, label = "{data_g}"];
	Node0x80f6b20 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f6b20 -> Node0x80f6c20[style=dashed, color="blue"];
	Node0x80f6b20 -> Node0x80eaef0[style=dotted, label="{S_FIELD}", color="red", penwidth="2.0"];
	Node0x80f6bb0 [shape=record,color="blue",label="{FORMAL_OUT: 0 %struct.list*}"];
	Node0x80f6bb0 -> Node0x80f6c20[style=dashed, color="blue"];
	Node0x80f6bb0 -> Node0x80f6ef0[style=dashed, color="blue"];
	Node0x80f6c20 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f6c20 -> Node0x80f6f60[style=dashed, color="blue"];
	Node0x80f7950 [shape=record,color="blue",label="{ACTUAL_IN: 0 %struct.list*}"];
	Node0x80f7950 -> Node0x80f6e80[style=dashed, color="blue"];
	Node0x80f7950 -> Node0x80f6ab0[style=dashed, color="blue"];
	Node0x80f6e80 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f6e80 -> Node0x80f6b20[style=dashed, color="blue"];
	Node0x80f6ef0 [shape=record,color="blue",label="{ACTUAL_OUT: 0 %struct.list*}"];
	Node0x80f6ef0 -> Node0x80f6f60[style=dashed, color="blue"];
	Node0x80f6f60 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x80f70a0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x80f70a0 -> Node0x80ed360;
	Node0x80f70a0 -> Node0x80e9840;
	Node0x80f70a0 -> Node0x80f7140;
	Node0x80f70a0 -> Node0x80f15b0;
	Node0x80f70a0 -> Node0x80f6080;
	Node0x80f70a0 -> Node0x80f1970;
	Node0x80f70a0 -> Node0x80f7110;
	Node0x80f70a0 -> Node0x80f6130;
	Node0x80f70a0 -> Node0x80f61a0;
	Node0x80f70a0 -> Node0x80f1ac0;
	Node0x80f70a0 -> Node0x80f19e0;
	Node0x80f70a0 -> Node0x80f6250;
	Node0x80f70a0 -> Node0x80f73e0;
	Node0x80f7140 [shape=record,label="{  call void @llvm.dbg.declare(metadata %struct.list** %X, metadata !58, metadata !DIExpression()), !dbg !59}"];
	Node0x80f7110 [shape=record,label="{  call void @llvm.dbg.declare(metadata %struct.list** %Y, metadata !61, metadata !DIExpression()), !dbg !62}"];
	Node0x80f73e0 [shape=record,label="{  ret i32 0, !dbg !26}"];
}
