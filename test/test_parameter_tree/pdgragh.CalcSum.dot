digraph "Program Dependency Graph for 'CalcSum' function" {
	label="Program Dependency Graph for 'CalcSum' function";

	Node0x7fab830 [shape=record,label="{  %s.addr = alloca i32, align 4}"];
	Node0x7fab830 -> Node0x7fab8a0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fab830 -> Node0x7fab910[style=dotted,label = "{DEF_USE}" ];
	Node0x7fab8a0 [shape=record,label="{  store i32 %s, i32* %s.addr, align 4}"];
	Node0x7fab8a0 -> Node0x7fab910[style=dotted,label = "{RAW} s.addr"];
	Node0x7fab910 [shape=record,label="{  %0 = load i32, i32* %s.addr, align 4}"];
	Node0x7fab910 -> Node0x7fad530[style=dotted,label = "{DEF_USE}" ];
	Node0x7fabae0 [shape=record,label="{  %i.addr = alloca i32, align 4}"];
	Node0x7fabae0 -> Node0x7fabb50[style=dotted,label = "{DEF_USE}" ];
	Node0x7fabae0 -> Node0x7fab980[style=dotted,label = "{DEF_USE}" ];
	Node0x7fabb50 [shape=record,label="{  store i32 %i, i32* %i.addr, align 4}"];
	Node0x7fabb50 -> Node0x7fab980[style=dotted,label = "{RAW} i.addr"];
	Node0x7fab980 [shape=record,label="{  %1 = load i32, i32* %i.addr, align 4}"];
	Node0x7fab980 -> Node0x7fad530[style=dotted,label = "{DEF_USE}" ];
	Node0x7fad530 [shape=record,label="{  %add = add nsw i32 %0, %1}"];
	Node0x7fad530 -> Node0x7fad5c0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fad5c0 [shape=record,label="{  ret i32 %add}"];
	Node0x7fad5c0 -> Node0x7fb3170;
	Node0x7fad650 [shape=record,label="{\<\<ENTRY\>\> CalcSum}"];
	Node0x7fad650 -> Node0x7fab830;
	Node0x7fad650 -> Node0x7fabae0;
	Node0x7fad650 -> Node0x7fab8a0;
	Node0x7fad650 -> Node0x7fabb50;
	Node0x7fad650 -> Node0x7fab910;
	Node0x7fad650 -> Node0x7fab980;
	Node0x7fad650 -> Node0x7fad530;
	Node0x7fad650 -> Node0x7fad5c0;
	Node0x7fad650 -> Node0x7fb6de0[style=dashed];
	Node0x7fad650 -> Node0x7fad7a0[style=dashed];
	Node0x7fad650 -> Node0x7fb6f60[style=dashed];
	Node0x7fad650 -> Node0x7fb7020[style=dashed];
	Node0x7fb3b80 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x7fb3b80 -> Node0x7fb4ee0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb4ee0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x7fb4fc0 [shape=record,label="{  %sum = alloca i32, align 4}"];
	Node0x7fb4fc0 -> Node0x7fb5030[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb4fc0 -> Node0x7fb50c0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb4fc0 -> Node0x7fb5160[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5030 [shape=record,label="{  store i32 0, i32* %sum, align 4}"];
	Node0x7fb5030 -> Node0x7fb50c0[style=dotted,label = "{RAW} sum"];
	Node0x7fb50c0 [shape=record,label="{  %1 = load i32, i32* %sum, align 4}"];
	Node0x7fb50c0 -> Node0x7fb5030;
	Node0x7fb50c0 -> Node0x7fb3170[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb50c0 -> Node0x7fb5160;
	Node0x7fb5160 [shape=record,label="{  store i32 %call, i32* %sum, align 4}"];
	Node0x7fb5160 -> Node0x7fb50c0[style=dotted,label = "{RAW} sum"];
	Node0x7fb5130 [shape=record,label="{  %i = alloca i32, align 4}"];
	Node0x7fb5130 -> Node0x7fb5220[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5130 -> Node0x7fad6c0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5130 -> Node0x7fb4c40[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5130 -> Node0x7fb4c10[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5130 -> Node0x7fb4d40[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb5220 [shape=record,label="{  store i32 0, i32* %i, align 4}"];
	Node0x7fb5220 -> Node0x7fad6c0[style=dotted,label = "{RAW} i"];
	Node0x7fb5220 -> Node0x7fb4c40[style=dotted,label = "{RAW} i"];
	Node0x7fb5220 -> Node0x7fb4c10[style=dotted,label = "{RAW} i"];
	Node0x7fad6c0 [shape=record,label="{  %0 = load i32, i32* %i, align 4}"];
	Node0x7fad6c0 -> Node0x7fb5220;
	Node0x7fad6c0 -> Node0x7fb2f80[style=dotted,label = "{DEF_USE}" ];
	Node0x7fad6c0 -> Node0x7fb4d40;
	Node0x7fb4c40 [shape=record,label="{  %2 = load i32, i32* %i, align 4}"];
	Node0x7fb4c40 -> Node0x7fad6c0;
	Node0x7fb4c40 -> Node0x7fb3170[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb4c10 [shape=record,label="{  %3 = load i32, i32* %i, align 4}"];
	Node0x7fb4c10 -> Node0x7fad6c0;
	Node0x7fb4c10 -> Node0x7fb32c0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb4d40 [shape=record,label="{  store i32 %add, i32* %i, align 4}"];
	Node0x7fb4d40 -> Node0x7fad6c0[style=dotted,label = "{RAW} i"];
	Node0x7fb4d40 -> Node0x7fb4c40[style=dotted,label = "{RAW} i"];
	Node0x7fb4d40 -> Node0x7fb4c10[style=dotted,label = "{RAW} i"];
	Node0x7fb4e40 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x7fb4e40 -> Node0x7fb3b80;
	Node0x7fb4e40 -> Node0x7fb4fc0;
	Node0x7fb4e40 -> Node0x7fb5130;
	Node0x7fb4e40 -> Node0x7fb4ee0;
	Node0x7fb4e40 -> Node0x7fb5030;
	Node0x7fb4e40 -> Node0x7fb5220;
	Node0x7fb4e40 -> Node0x7fb2e30;
	Node0x7fb4e40 -> Node0x7fad6c0;
	Node0x7fb4e40 -> Node0x7fb2f80;
	Node0x7fb4e40 -> Node0x7fb2eb0;
	Node0x7fb4e40 -> Node0x7fb3100;
	Node0x7fb2e30 [shape=record,label="{  br label %while.cond}"];
	Node0x7fb2f80 [shape=record,label="{  %cmp = icmp slt i32 %0, 10}"];
	Node0x7fb2f80 -> Node0x7fb2eb0[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb2eb0 [shape=record,label="{  br i1 %cmp, label %while.body, label %while.end}"];
	Node0x7fb2eb0 -> Node0x7fad6c0;
	Node0x7fb2eb0 -> Node0x7fb2f80;
	Node0x7fb2eb0 -> Node0x7fb50c0;
	Node0x7fb2eb0 -> Node0x7fb4c40;
	Node0x7fb2eb0 -> Node0x7fb3170;
	Node0x7fb2eb0 -> Node0x7fb5160;
	Node0x7fb2eb0 -> Node0x7fb4c10;
	Node0x7fb2eb0 -> Node0x7fb32c0;
	Node0x7fb2eb0 -> Node0x7fb4d40;
	Node0x7fb2eb0 -> Node0x7fb3230;
	Node0x7fb3100 [shape=record,label="{  ret i32 0}"];
	Node0x7fb3170 [shape=record,label="{  %call = call i32 @CalcSum(i32 %1, i32 %2)}"];
	Node0x7fb3170 -> Node0x7fad650;
	Node0x7fb3170 -> Node0x7fb7790[style=dashed];
	Node0x7fb3170 -> Node0x7fb7830[style=dashed];
	Node0x7fb3170 -> Node0x7fb7800[style=dashed];
	Node0x7fb3170 -> Node0x7fb7930[style=dashed];
	Node0x7fb3170 -> Node0x7fb5160[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb32c0 [shape=record,label="{  %add = add nsw i32 %3, 1}"];
	Node0x7fb32c0 -> Node0x7fb4d40[style=dotted,label = "{DEF_USE}" ];
	Node0x7fb3230 [shape=record,label="{  br label %while.cond}"];
	Node0x7fb6de0 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x7fb6de0 -> Node0x7fad7a0[style=dashed];
	Node0x7fb6de0 -> Node0x7fab8a0;
	Node0x7fb6de0 -> Node0x7fabb50;
	Node0x7fad7a0 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x7fad7a0 -> Node0x7fb7830[style=dashed];
	Node0x7fb6f60 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x7fb6f60 -> Node0x7fb7020[style=dashed];
	Node0x7fb6f60 -> Node0x7fab8a0;
	Node0x7fb6f60 -> Node0x7fabb50;
	Node0x7fb7020 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x7fb7020 -> Node0x7fb7930[style=dashed];
	Node0x7fb7790 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x7fb7790 -> Node0x7fb6de0[style=dashed];
	Node0x7fb7830 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x7fb7830 -> Node0x7fad6c0;
	Node0x7fb7830 -> Node0x7fb50c0;
	Node0x7fb7830 -> Node0x7fb4c40;
	Node0x7fb7830 -> Node0x7fb4c10;
	Node0x7fb7800 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x7fb7800 -> Node0x7fb6f60[style=dashed];
	Node0x7fb7930 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x7fb7930 -> Node0x7fad6c0;
	Node0x7fb7930 -> Node0x7fb50c0;
	Node0x7fb7930 -> Node0x7fb4c40;
	Node0x7fb7930 -> Node0x7fb4c10;
}
