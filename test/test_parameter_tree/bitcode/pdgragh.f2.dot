digraph "Program Dependency Graph for 'f2' function" {
	label="Program Dependency Graph for 'f2' function";

	Node0x8426470 [shape=record,label="{  %a.addr = alloca i32*, align 8}"];
	Node0x8426470 -> Node0x84264e0[style=dotted,label = "{DEF_USE}" ];
	Node0x8426470 -> Node0x8426550[style=dotted,label = "{DEF_USE}" ];
	Node0x8426470 -> Node0x8426620[style=dotted,label = "{DEF_USE}" ];
	Node0x84264e0 [shape=record,label="{  store i32* %a, i32** %a.addr, align 8}"];
	Node0x84264e0 -> Node0x8426550[style=dotted,label = "{RAW} a.addr"];
	Node0x84264e0 -> Node0x8426620[style=dotted,label = "{RAW} a.addr"];
	Node0x8426550 [shape=record,label="{  %0 = load i32*, i32** %a.addr, align 8}"];
	Node0x8426550 -> Node0x8426750[style=dotted,label = "{DEF_USE}" ];
	Node0x8426550 -> Node0x842cbd0[style=dotted, label = "{data_g}"];
	Node0x8426620 [shape=record,label="{  %2 = load i32*, i32** %a.addr, align 8}"];
	Node0x8426620 -> Node0x8427fc0[style=dotted,label = "{DEF_USE}" ];
	Node0x8426620 -> Node0x842cbd0[style=dotted, label = "{data_g}"];
	Node0x8426750 [shape=record,label="{  %1 = load i32, i32* %0, align 4}"];
	Node0x8426750 -> Node0x84265c0[style=dotted,label = "{DEF_USE}" ];
	Node0x8426750 -> Node0x842cc40[style=dotted, label = "{data_g}"];
	Node0x84265c0 [shape=record,label="{  %add = add nsw i32 %1, 16}"];
	Node0x84265c0 -> Node0x8426850[style=dotted,label = "{DEF_USE}" ];
	Node0x8426850 [shape=record,label="{  %sub = sub nsw i32 %add, %3}"];
	Node0x8426850 -> Node0x8428070[style=dotted,label = "{DEF_USE}" ];
	Node0x8427fc0 [shape=record,label="{  %3 = ptrtoint i32* %2 to i32}"];
	Node0x8427fc0 -> Node0x8426850[style=dotted,label = "{DEF_USE}" ];
	Node0x8428070 [shape=record,label="{  %or = or i32 %sub, 4}"];
	Node0x8428070 -> Node0x8428190[style=dotted,label = "{DEF_USE}" ];
	Node0x8428190 [shape=record,label="{  ret i32 %or}"];
	Node0x8428190 -> Node0x842a820[style=dotted, label = "{data_g}"];
	Node0x8428190 -> Node0x842a230[style=dotted, label = "{data_g}"];
	Node0x8428190 -> Node0x842e390[style=dotted, label = "{data_g}"];
	Node0x8428190 -> Node0x8429c50[style=dotted, label = "{data_g}"];
	Node0x8428220 [shape=record,label="{\<\<ENTRY\>\> f2}"];
	Node0x8428220 -> Node0x8426470;
	Node0x8428220 -> Node0x84264e0;
	Node0x8428220 -> Node0x8426550;
	Node0x8428220 -> Node0x8426750;
	Node0x8428220 -> Node0x84265c0;
	Node0x8428220 -> Node0x8426620;
	Node0x8428220 -> Node0x8427fc0;
	Node0x8428220 -> Node0x8426850;
	Node0x8428220 -> Node0x8428070;
	Node0x8428220 -> Node0x8428190;
	Node0x8428220 -> Node0x842cad0[style=dashed, color="blue"];
	Node0x8428220 -> Node0x842cbd0[style=dashed, color="blue"];
	Node0x84298f0 [shape=record,label="{  %b.addr = alloca i32*, align 8}"];
	Node0x84298f0 -> Node0x8429960[style=dotted,label = "{DEF_USE}" ];
	Node0x84298f0 -> Node0x84299d0[style=dotted,label = "{DEF_USE}" ];
	Node0x84298f0 -> Node0x8429a70[style=dotted,label = "{DEF_USE}" ];
	Node0x84298f0 -> Node0x8429a40[style=dotted,label = "{DEF_USE}" ];
	Node0x8429960 [shape=record,label="{  store i32* %b, i32** %b.addr, align 8}"];
	Node0x8429960 -> Node0x84299d0[style=dotted,label = "{RAW} b.addr"];
	Node0x8429960 -> Node0x8429a70[style=dotted,label = "{RAW} b.addr"];
	Node0x8429960 -> Node0x8429a40[style=dotted,label = "{RAW} b.addr"];
	Node0x84299d0 [shape=record,label="{  %0 = load i32*, i32** %b.addr, align 8}"];
	Node0x84299d0 -> Node0x842a3e0[style=dotted,label = "{DEF_USE}" ];
	Node0x84299d0 -> Node0x8430ff0[style=dotted, label = "{data_g}"];
	Node0x84299d0 -> Node0x84310f0[style=dotted, label = "{data_g}"];
	Node0x8429a70 [shape=record,label="{  %3 = load i32*, i32** %b.addr, align 8}"];
	Node0x8429a70 -> Node0x842a230[style=dotted,label = "{DEF_USE}" ];
	Node0x8429a70 -> Node0x842e100[style=dashed, color="blue"];
	Node0x8429a70 -> Node0x8430ff0[style=dotted, label = "{data_g}"];
	Node0x8429a70 -> Node0x84310f0[style=dotted, label = "{data_g}"];
	Node0x8429a40 [shape=record,label="{  %4 = load i32*, i32** %b.addr, align 8}"];
	Node0x8429a40 -> Node0x842e390[style=dotted,label = "{DEF_USE}" ];
	Node0x8429a40 -> Node0x842ee50[style=dashed, color="blue"];
	Node0x8429a40 -> Node0x8430ff0[style=dotted, label = "{data_g}"];
	Node0x8429a40 -> Node0x84310f0[style=dotted, label = "{data_g}"];
	Node0x8429be0 [shape=record,label="{  %c = alloca i32, align 4}"];
	Node0x8429be0 -> Node0x84280e0[style=dotted,label = "{DEF_USE}" ];
	Node0x8429be0 -> Node0x8429c50[style=dotted,label = "{DEF_USE}" ];
	Node0x8429be0 -> Node0x842fad0[style=dashed, color="blue"];
	Node0x84280e0 [shape=record,label="{  store i32 %sub, i32* %c, align 4}"];
	Node0x84280e0 -> Node0x842a3e0[style=dotted,label = "{RAW} "];
	Node0x8429c50 [shape=record,label="{  %call4 = call i32 @f2(i32* %c)}"];
	Node0x8429c50 -> Node0x8428220;
	Node0x8429c50 -> Node0x842fad0[style=dashed, color="blue"];
	Node0x8429c50 -> Node0x842fba0[style=dashed, color="blue"];
	Node0x8429c50 -> Node0x842a180[style=dotted,label = "{DEF_USE}" ];
	Node0x842a260 [shape=record,label="{  %a.addr = alloca i32*, align 8}"];
	Node0x842a260 -> Node0x842a2d0[style=dotted,label = "{DEF_USE}" ];
	Node0x842a260 -> Node0x842a340[style=dotted,label = "{DEF_USE}" ];
	Node0x842a2d0 [shape=record,label="{  store i32* %a, i32** %a.addr, align 8}"];
	Node0x842a2d0 -> Node0x842a340[style=dotted,label = "{RAW} a.addr"];
	Node0x842a340 [shape=record,label="{  %2 = load i32*, i32** %a.addr, align 8}"];
	Node0x842a340 -> Node0x842a820[style=dotted,label = "{DEF_USE}" ];
	Node0x842a340 -> Node0x842d310[style=dashed, color="blue"];
	Node0x842a340 -> Node0x8430ff0[style=dotted, label = "{data_g}"];
	Node0x842a340 -> Node0x84310f0[style=dotted, label = "{data_g}"];
	Node0x842a3e0 [shape=record,label="{  %1 = load i32, i32* %0, align 4}"];
	Node0x842a3e0 -> Node0x842a4a0[style=dotted,label = "{DEF_USE}" ];
	Node0x842a3e0 -> Node0x8431060[style=dotted, label = "{data_g}"];
	Node0x842a3e0 -> Node0x8431160[style=dotted, label = "{data_g}"];
	Node0x842a4a0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %1)}"];
	Node0x842a820 [shape=record,label="{  %call1 = call i32 @f2(i32* %2)}"];
	Node0x842a820 -> Node0x8428220;
	Node0x842a820 -> Node0x842d310[style=dashed, color="blue"];
	Node0x842a820 -> Node0x842d420[style=dashed, color="blue"];
	Node0x842a820 -> Node0x842a1b0[style=dotted,label = "{DEF_USE}" ];
	Node0x842cad0 [shape=record,label="{FORMAL_IN: 0 i32*}"];
	Node0x842cad0 -> Node0x842cb40[style=dashed, color="blue"];
	Node0x842cad0 -> Node0x842cbd0[style=dashed, color="blue"];
	Node0x842cad0 -> Node0x84264e0[style=dotted, label = "{data_g}"];
	Node0x842cb40 [shape=record,label="{i32 pos: 0 - 0}"];
	Node0x842cb40 -> Node0x842cc40[style=dashed, color="blue"];
	Node0x842cb40 -> Node0x84264e0[style=dotted, label = "{data_g}"];
	Node0x842cbd0 [shape=record,label="{FORMAL_OUT: 0 i32*}"];
	Node0x842cbd0 -> Node0x842cc40[style=dashed, color="blue"];
	Node0x842cbd0 -> Node0x842d420[style=dashed, color="blue"];
	Node0x842cbd0 -> Node0x842e210[style=dashed, color="blue"];
	Node0x842cbd0 -> Node0x842ef60[style=dashed, color="blue"];
	Node0x842cbd0 -> Node0x842fba0[style=dashed, color="blue"];
	Node0x842cc40 [shape=record,label="{i32 pos: 0 - 1}"];
	Node0x842cc40 -> Node0x842d490[style=dashed, color="blue"];
	Node0x842cc40 -> Node0x842e280[style=dashed, color="blue"];
	Node0x842cc40 -> Node0x842efd0[style=dashed, color="blue"];
	Node0x842cc40 -> Node0x842fc10[style=dashed, color="blue"];
	Node0x842d310 [shape=record,label="{ACTUAL_IN: 0 i32*}"];
	Node0x842d310 -> Node0x842d3b0[style=dashed, color="blue"];
	Node0x842d310 -> Node0x842cad0[style=dashed, color="blue"];
	Node0x842d3b0 [shape=record,label="{i32 pos: 0 - 3}"];
	Node0x842d3b0 -> Node0x842cb40[style=dashed, color="blue"];
	Node0x842d420 [shape=record,label="{ACTUAL_OUT: 0 i32*}"];
	Node0x842d420 -> Node0x842d490[style=dashed, color="blue"];
	Node0x842d420 -> Node0x84299d0[style=dotted, label = "{data_g}"];
	Node0x842d420 -> Node0x842a340[style=dotted, label = "{data_g}"];
	Node0x842d420 -> Node0x8429a70[style=dotted, label = "{data_g}"];
	Node0x842d420 -> Node0x8429a40[style=dotted, label = "{data_g}"];
	Node0x842d490 [shape=record,label="{i32 pos: 0 - 5}"];
	Node0x842d490 -> Node0x842a3e0[style=dotted, label = "{data_g}"];
	Node0x842a1b0 [shape=record,label="{  %sub = sub nsw i32 %call1, %call2}"];
	Node0x842a1b0 -> Node0x84280e0[style=dotted,label = "{DEF_USE}" ];
	Node0x842a230 [shape=record,label="{  %call2 = call i32 @f2(i32* %3)}"];
	Node0x842a230 -> Node0x8428220;
	Node0x842a230 -> Node0x842e100[style=dashed, color="blue"];
	Node0x842a230 -> Node0x842e210[style=dashed, color="blue"];
	Node0x842a230 -> Node0x842a1b0[style=dotted,label = "{DEF_USE}" ];
	Node0x842e100 [shape=record,label="{ACTUAL_IN: 0 i32*}"];
	Node0x842e100 -> Node0x842e1a0[style=dashed, color="blue"];
	Node0x842e100 -> Node0x842cad0[style=dashed, color="blue"];
	Node0x842e1a0 [shape=record,label="{i32 pos: 0 - 7}"];
	Node0x842e1a0 -> Node0x842cb40[style=dashed, color="blue"];
	Node0x842e210 [shape=record,label="{ACTUAL_OUT: 0 i32*}"];
	Node0x842e210 -> Node0x842e280[style=dashed, color="blue"];
	Node0x842e210 -> Node0x84299d0[style=dotted, label = "{data_g}"];
	Node0x842e210 -> Node0x842a340[style=dotted, label = "{data_g}"];
	Node0x842e210 -> Node0x8429a70[style=dotted, label = "{data_g}"];
	Node0x842e210 -> Node0x8429a40[style=dotted, label = "{data_g}"];
	Node0x842e280 [shape=record,label="{i32 pos: 0 - 9}"];
	Node0x842e280 -> Node0x842a3e0[style=dotted, label = "{data_g}"];
	Node0x842e390 [shape=record,label="{  %call3 = call i32 @f2(i32* %4)}"];
	Node0x842e390 -> Node0x8428220;
	Node0x842e390 -> Node0x842ee50[style=dashed, color="blue"];
	Node0x842e390 -> Node0x842ef60[style=dashed, color="blue"];
	Node0x842e390 -> Node0x842a180[style=dotted,label = "{DEF_USE}" ];
	Node0x842ee50 [shape=record,label="{ACTUAL_IN: 0 i32*}"];
	Node0x842ee50 -> Node0x842eef0[style=dashed, color="blue"];
	Node0x842ee50 -> Node0x842cad0[style=dashed, color="blue"];
	Node0x842eef0 [shape=record,label="{i32 pos: 0 - 11}"];
	Node0x842eef0 -> Node0x842cb40[style=dashed, color="blue"];
	Node0x842ef60 [shape=record,label="{ACTUAL_OUT: 0 i32*}"];
	Node0x842ef60 -> Node0x842efd0[style=dashed, color="blue"];
	Node0x842ef60 -> Node0x84299d0[style=dotted, label = "{data_g}"];
	Node0x842ef60 -> Node0x842a340[style=dotted, label = "{data_g}"];
	Node0x842ef60 -> Node0x8429a70[style=dotted, label = "{data_g}"];
	Node0x842ef60 -> Node0x8429a40[style=dotted, label = "{data_g}"];
	Node0x842efd0 [shape=record,label="{i32 pos: 0 - 13}"];
	Node0x842efd0 -> Node0x842a3e0[style=dotted, label = "{data_g}"];
	Node0x842a180 [shape=record,label="{  %mul = mul nsw i32 %call3, %call4}"];
	Node0x842a180 -> Node0x842fd80[style=dotted,label = "{DEF_USE}" ];
	Node0x842fad0 [shape=record,label="{ACTUAL_IN: 0 i32*}"];
	Node0x842fad0 -> Node0x8429cc0[style=dashed, color="blue"];
	Node0x842fad0 -> Node0x842cad0[style=dashed, color="blue"];
	Node0x8429cc0 [shape=record,label="{i32 pos: 0 - 15}"];
	Node0x8429cc0 -> Node0x842cb40[style=dashed, color="blue"];
	Node0x842fba0 [shape=record,label="{ACTUAL_OUT: 0 i32*}"];
	Node0x842fba0 -> Node0x842fc10[style=dashed, color="blue"];
	Node0x842fba0 -> Node0x84299d0[style=dotted, label = "{data_g}"];
	Node0x842fba0 -> Node0x842a340[style=dotted, label = "{data_g}"];
	Node0x842fba0 -> Node0x8429a70[style=dotted, label = "{data_g}"];
	Node0x842fba0 -> Node0x8429a40[style=dotted, label = "{data_g}"];
	Node0x842fc10 [shape=record,label="{i32 pos: 0 - 17}"];
	Node0x842fc10 -> Node0x842a3e0[style=dotted, label = "{data_g}"];
	Node0x842fd80 [shape=record,label="{  ret i32 %mul}"];
	Node0x842fd80 -> Node0x842c4b0[style=dotted, label = "{data_g}"];
	Node0x842fe80 [shape=record,label="{\<\<ENTRY\>\> f1}"];
	Node0x842fe80 -> Node0x84298f0;
	Node0x842fe80 -> Node0x8429be0;
	Node0x842fe80 -> Node0x842a260;
	Node0x842fe80 -> Node0x842a2d0;
	Node0x842fe80 -> Node0x8429960;
	Node0x842fe80 -> Node0x84299d0;
	Node0x842fe80 -> Node0x842a3e0;
	Node0x842fe80 -> Node0x842a4a0;
	Node0x842fe80 -> Node0x842a340;
	Node0x842fe80 -> Node0x842a820;
	Node0x842fe80 -> Node0x8429a70;
	Node0x842fe80 -> Node0x842a230;
	Node0x842fe80 -> Node0x842a1b0;
	Node0x842fe80 -> Node0x84280e0;
	Node0x842fe80 -> Node0x8429a40;
	Node0x842fe80 -> Node0x842e390;
	Node0x842fe80 -> Node0x8429c50;
	Node0x842fe80 -> Node0x842a180;
	Node0x842fe80 -> Node0x842fd80;
	Node0x842fe80 -> Node0x8430df0[style=dashed, color="blue"];
	Node0x842fe80 -> Node0x8430ff0[style=dashed, color="blue"];
	Node0x842fe80 -> Node0x8430ef0[style=dashed, color="blue"];
	Node0x842fe80 -> Node0x84310f0[style=dashed, color="blue"];
	Node0x842c410 [shape=record,label="{  %a = alloca i32, align 4}"];
	Node0x842c410 -> Node0x842c440[style=dotted,label = "{DEF_USE}" ];
	Node0x842c410 -> Node0x842c4b0[style=dotted,label = "{DEF_USE}" ];
	Node0x842c410 -> Node0x8431e50[style=dashed, color="blue"];
	Node0x842c440 [shape=record,label="{  store i32 4, i32* %a, align 4}"];
	Node0x842c4b0 [shape=record,label="{  %call = call i32 @f1(i32* %a, i32* %b)}"];
	Node0x842c4b0 -> Node0x842fe80;
	Node0x842c4b0 -> Node0x8431e50[style=dashed, color="blue"];
	Node0x842c4b0 -> Node0x842d650[style=dashed, color="blue"];
	Node0x842c4b0 -> Node0x842d550[style=dashed, color="blue"];
	Node0x842c4b0 -> Node0x8432310[style=dashed, color="blue"];
	Node0x842c5c0 [shape=record,label="{  %b = alloca i32, align 4}"];
	Node0x842c5c0 -> Node0x842c630[style=dotted,label = "{DEF_USE}" ];
	Node0x842c5c0 -> Node0x842c4b0[style=dotted,label = "{DEF_USE}" ];
	Node0x842c5c0 -> Node0x842d550[style=dashed, color="blue"];
	Node0x842c630 [shape=record,label="{  store i32 5, i32* %b, align 4}"];
	Node0x8430df0 [shape=record,label="{FORMAL_IN: 0 i32*}"];
	Node0x8430df0 -> Node0x8430e60[style=dashed, color="blue"];
	Node0x8430df0 -> Node0x8430ff0[style=dashed, color="blue"];
	Node0x8430df0 -> Node0x842a2d0[style=dotted, label = "{data_g}"];
	Node0x8430e60 [shape=record,label="{i32 pos: 0 - 0}"];
	Node0x8430e60 -> Node0x8431060[style=dashed, color="blue"];
	Node0x8430e60 -> Node0x842a2d0[style=dotted, label = "{data_g}"];
	Node0x8430ef0 [shape=record,label="{FORMAL_IN: 1 i32*}"];
	Node0x8430ef0 -> Node0x8430f60[style=dashed, color="blue"];
	Node0x8430ef0 -> Node0x84310f0[style=dashed, color="blue"];
	Node0x8430ef0 -> Node0x8429960[style=dotted, label = "{data_g}"];
	Node0x8430f60 [shape=record,label="{i32 pos: 1 - 0}"];
	Node0x8430f60 -> Node0x8431160[style=dashed, color="blue"];
	Node0x8430f60 -> Node0x8429960[style=dotted, label = "{data_g}"];
	Node0x8430ff0 [shape=record,label="{FORMAL_OUT: 0 i32*}"];
	Node0x8430ff0 -> Node0x8431060[style=dashed, color="blue"];
	Node0x8430ff0 -> Node0x842d650[style=dashed, color="blue"];
	Node0x8431060 [shape=record,label="{i32 pos: 0 - 19}"];
	Node0x8431060 -> Node0x842d6c0[style=dashed, color="blue"];
	Node0x84310f0 [shape=record,label="{FORMAL_OUT: 1 i32*}"];
	Node0x84310f0 -> Node0x8431160[style=dashed, color="blue"];
	Node0x84310f0 -> Node0x8432310[style=dashed, color="blue"];
	Node0x8431160 [shape=record,label="{i32 pos: 1 - 21}"];
	Node0x8431160 -> Node0x8432380[style=dashed, color="blue"];
	Node0x8431e50 [shape=record,label="{ACTUAL_IN: 0 i32*}"];
	Node0x8431e50 -> Node0x842c520[style=dashed, color="blue"];
	Node0x8431e50 -> Node0x8430df0[style=dashed, color="blue"];
	Node0x842c520 [shape=record,label="{i32 pos: 0 - 23}"];
	Node0x842c520 -> Node0x8430e60[style=dashed, color="blue"];
	Node0x842d550 [shape=record,label="{ACTUAL_IN: 1 i32*}"];
	Node0x842d550 -> Node0x842c6a0[style=dashed, color="blue"];
	Node0x842d550 -> Node0x8430ef0[style=dashed, color="blue"];
	Node0x842c6a0 [shape=record,label="{i32 pos: 1 - 27}"];
	Node0x842c6a0 -> Node0x8430f60[style=dashed, color="blue"];
	Node0x842d650 [shape=record,label="{ACTUAL_OUT: 0 i32*}"];
	Node0x842d650 -> Node0x842d6c0[style=dashed, color="blue"];
	Node0x842d6c0 [shape=record,label="{i32 pos: 0 - 25}"];
	Node0x8432310 [shape=record,label="{ACTUAL_OUT: 1 i32*}"];
	Node0x8432310 -> Node0x8432380[style=dashed, color="blue"];
	Node0x8432380 [shape=record,label="{i32 pos: 1 - 29}"];
	Node0x8432610 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x8432610 -> Node0x842c410;
	Node0x8432610 -> Node0x842c5c0;
	Node0x8432610 -> Node0x842c440;
	Node0x8432610 -> Node0x842c630;
	Node0x8432610 -> Node0x842c4b0;
	Node0x8432610 -> Node0x8432680;
	Node0x8432680 [shape=record,label="{  ret i32 0}"];
}
