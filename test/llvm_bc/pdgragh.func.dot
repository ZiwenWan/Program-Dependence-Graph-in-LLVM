digraph "Program Dependency Graph for 'func' function" {
	label="Program Dependency Graph for 'func' function";

	Node0x8a55aa0 [shape=record,label="{  %p.addr = alloca %struct.S1*, align 8}"];
	Node0x8a55aa0 -> Node0x8a5a5f0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a55aa0 -> Node0x8a5a660[style=dotted,label = "{DEF_USE}" ];
	Node0x8a5a5f0 [shape=record,label="{  store %struct.S1* %p, %struct.S1** %p.addr, align 8}"];
	Node0x8a5a5f0 -> Node0x8a5a660[style=dotted,label = "{RAW} p.addr"];
	Node0x8a5a660 [shape=record,label="{  %0 = load %struct.S1*, %struct.S1** %p.addr, align 8}"];
	Node0x8a5a660 -> Node0x8a564b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a5a660 -> Node0x8a59a10[style=dotted];
	Node0x8a564b0 [shape=record,label="{  %sp = getelementptr inbounds %struct.S1, %struct.S1* %0, i32 0, i32 1}"];
	Node0x8a564b0 -> Node0x8a56520[style=dotted,label = "{DEF_USE}" ];
	Node0x8a56520 [shape=record,label="{  %1 = load %struct.S2*, %struct.S2** %sp, align 8}"];
	Node0x8a56520 -> Node0x8a5a6d0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a56520 -> Node0x8a59af0[style=dotted];
	Node0x8a5a6d0 [shape=record,label="{  %x = getelementptr inbounds %struct.S2, %struct.S2* %1, i32 0, i32 0}"];
	Node0x8a5a6d0 -> Node0x8a56620[style=dotted,label = "{DEF_USE}" ];
	Node0x8a56620 [shape=record,label="{  %2 = load i32, i32* %x, align 4}"];
	Node0x8a56620 -> Node0x8a566b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a56620 -> Node0x8a59b90[style=dotted];
	Node0x8a56620 -> Node0x8a59c00[style=dotted];
	Node0x8a566b0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2)}"];
	Node0x8a56740 [shape=record,label="{\<\<ENTRY\>\> func}"];
	Node0x8a56740 -> Node0x8a55aa0;
	Node0x8a56740 -> Node0x8a5a5f0;
	Node0x8a56740 -> Node0x8a5a660;
	Node0x8a56740 -> Node0x8a564b0;
	Node0x8a56740 -> Node0x8a56520;
	Node0x8a56740 -> Node0x8a5a6d0;
	Node0x8a56740 -> Node0x8a56620;
	Node0x8a56740 -> Node0x8a566b0;
	Node0x8a56740 -> Node0x8a56860;
	Node0x8a56740 -> Node0x8a596e0[style=dashed,label= "{para}" ];
	Node0x8a56740 -> Node0x8a59a10[style=dashed,label= "{para}" ];
	Node0x8a56860 [shape=record,label="{  ret void}"];
	Node0x8a57e90 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x8a57e90 -> Node0x8a57ec0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a57ec0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x8a5a9b0 [shape=record,label="{  %s1 = alloca %struct.S1, align 8}"];
	Node0x8a5a9b0 -> Node0x8a57fa0[style=dotted,label = "{DEF_USE}" ];
	Node0x8a57fa0 [shape=record,label="{  call void @func(%struct.S1* %s1)}"];
	Node0x8a57fa0 -> Node0x8a56740;
	Node0x8a57fa0 -> Node0x8a5c360[style=dashed,label= "{para}" ];
	Node0x8a57fa0 -> Node0x8a5c5f0[style=dashed,label= "{para}" ];
	Node0x8a596e0 [shape=record,label="{FORMAL_IN:%struct.S1*}"];
	Node0x8a596e0 -> Node0x8a59750[style=dashed,label= "{para}" ];
	Node0x8a596e0 -> Node0x8a597e0[style=dashed,label= "{para}" ];
	Node0x8a596e0 -> Node0x8a59a10[style=dashed,label= "{para}" ];
	Node0x8a596e0 -> Node0x8a5a5f0[style=dotted];
	Node0x8a59750 [shape=record,label="{1 float}"];
	Node0x8a59750 -> Node0x8a59a80[style=dashed,label= "{para}" ];
	Node0x8a597e0 [shape=record,label="{2 %struct.S2*}"];
	Node0x8a597e0 -> Node0x8a567e0[style=dashed,label= "{para}" ];
	Node0x8a597e0 -> Node0x8a56810[style=dashed,label= "{para}" ];
	Node0x8a597e0 -> Node0x8a59af0[style=dashed,label= "{para}" ];
	Node0x8a567e0 [shape=record,label="{3 i32}"];
	Node0x8a567e0 -> Node0x8a59b90[style=dashed,label= "{para}" ];
	Node0x8a56810 [shape=record,label="{4 i32}"];
	Node0x8a56810 -> Node0x8a59c00[style=dashed,label= "{para}" ];
	Node0x8a59a10 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8a59a10 -> Node0x8a59a80[style=dashed,label= "{para}" ];
	Node0x8a59a10 -> Node0x8a59af0[style=dashed,label= "{para}" ];
	Node0x8a59a10 -> Node0x8a5c5f0[style=dashed,label= "{para}" ];
	Node0x8a59a80 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8a59a80 -> Node0x8a5c660[style=dashed,label= "{para}" ];
	Node0x8a59af0 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8a59af0 -> Node0x8a59b90[style=dashed,label= "{para}" ];
	Node0x8a59af0 -> Node0x8a59c00[style=dashed,label= "{para}" ];
	Node0x8a59af0 -> Node0x8a5c6d0[style=dashed,label= "{para}" ];
	Node0x8a59b90 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8a59b90 -> Node0x8a5c770[style=dashed,label= "{para}" ];
	Node0x8a59c00 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8a59c00 -> Node0x8a59850[style=dashed,label= "{para}" ];
	Node0x8a5c360 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8a5c360 -> Node0x8a5c3d0[style=dashed,label= "{para}" ];
	Node0x8a5c360 -> Node0x8a5c440[style=dashed,label= "{para}" ];
	Node0x8a5c360 -> Node0x8a596e0[style=dashed,label= "{para}" ];
	Node0x8a5c3d0 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8a5c3d0 -> Node0x8a59750[style=dashed,label= "{para}" ];
	Node0x8a5c440 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8a5c440 -> Node0x8a5c4e0[style=dashed,label= "{para}" ];
	Node0x8a5c440 -> Node0x8a5c550[style=dashed,label= "{para}" ];
	Node0x8a5c440 -> Node0x8a597e0[style=dashed,label= "{para}" ];
	Node0x8a5c4e0 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8a5c4e0 -> Node0x8a567e0[style=dashed,label= "{para}" ];
	Node0x8a5c550 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8a5c550 -> Node0x8a56810[style=dashed,label= "{para}" ];
	Node0x8a5c5f0 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8a5c5f0 -> Node0x8a5c660[style=dashed,label= "{para}" ];
	Node0x8a5c5f0 -> Node0x8a5c6d0[style=dashed,label= "{para}" ];
	Node0x8a5c660 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8a5c6d0 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8a5c6d0 -> Node0x8a5c770[style=dashed,label= "{para}" ];
	Node0x8a5c6d0 -> Node0x8a59850[style=dashed,label= "{para}" ];
	Node0x8a5c770 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8a59850 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8a59c70 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x8a59c70 -> Node0x8a57e90;
	Node0x8a59c70 -> Node0x8a5a9b0;
	Node0x8a59c70 -> Node0x8a59b60;
	Node0x8a59c70 -> Node0x8a57ec0;
	Node0x8a59c70 -> Node0x8a57fa0;
	Node0x8a59c70 -> Node0x8a5c5c0;
	Node0x8a59b60 [shape=record,label="{  %s2 = alloca %struct.S2, align 4}"];
	Node0x8a5c5c0 [shape=record,label="{  ret i32 0}"];
}
