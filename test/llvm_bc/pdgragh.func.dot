digraph "Program Dependency Graph for 'func' function" {
	label="Program Dependency Graph for 'func' function";

	Node0x8102ca0 [shape=record,label="{  %p1.addr = alloca %struct.S1*, align 8}"];
	Node0x8102ca0 -> Node0x81055b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8102ca0 -> Node0x8105640[style=dotted,label = "{DEF_USE}" ];
	Node0x81055b0 [shape=record,label="{  store %struct.S1* %p1, %struct.S1** %p1.addr, align 8}"];
	Node0x81055b0 -> Node0x8105640[style=dotted,label = "{RAW} p1.addr"];
	Node0x8105640 [shape=record,label="{  %0 = load %struct.S1*, %struct.S1** %p1.addr, align 8}"];
	Node0x8105640 -> Node0x8105960[style=dotted,label = "{DEF_USE}" ];
	Node0x8105740 [shape=record,label="{  %p2.addr = alloca %struct.S2*, align 8}"];
	Node0x8105740 -> Node0x8105830[style=dotted,label = "{DEF_USE}" ];
	Node0x8105740 -> Node0x81056b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8105830 [shape=record,label="{  store %struct.S2* %p2, %struct.S2** %p2.addr, align 8}"];
	Node0x8105830 -> Node0x81056b0[style=dotted,label = "{RAW} p2.addr"];
	Node0x81056b0 [shape=record,label="{  %3 = load %struct.S2*, %struct.S2** %p2.addr, align 8}"];
	Node0x81056b0 -> Node0x8103980[style=dotted,label = "{DEF_USE}" ];
	Node0x8105960 [shape=record,label="{  %sp = getelementptr inbounds %struct.S1, %struct.S1* %0, i32 0, i32 1}"];
	Node0x8105960 -> Node0x81059f0[style=dotted,label = "{DEF_USE}" ];
	Node0x81059f0 [shape=record,label="{  %1 = load %struct.S2*, %struct.S2** %sp, align 8}"];
	Node0x81059f0 -> Node0x8105a80[style=dotted,label = "{DEF_USE}" ];
	Node0x8105a80 [shape=record,label="{  %x = getelementptr inbounds %struct.S2, %struct.S2* %1, i32 0, i32 0}"];
	Node0x8105a80 -> Node0x8103860[style=dotted,label = "{DEF_USE}" ];
	Node0x8103860 [shape=record,label="{  %2 = load i32, i32* %x, align 4}"];
	Node0x8103860 -> Node0x81038f0[style=dotted,label = "{DEF_USE}" ];
	Node0x81038f0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2)}"];
	Node0x8103980 [shape=record,label="{  %x1 = getelementptr inbounds %struct.S2, %struct.S2* %3, i32 0, i32 0}"];
	Node0x8103980 -> Node0x8103a10[style=dotted,label = "{DEF_USE}" ];
	Node0x8103a10 [shape=record,label="{  %4 = load i32, i32* %x1, align 4}"];
	Node0x8103a10 -> Node0x8103aa0[style=dotted,label = "{DEF_USE}" ];
	Node0x8103aa0 [shape=record,label="{  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %4)}"];
	Node0x8103b30 [shape=record,label="{\<\<ENTRY\>\> func}"];
	Node0x8103b30 -> Node0x8102ca0;
	Node0x8103b30 -> Node0x8105740;
	Node0x8103b30 -> Node0x81055b0;
	Node0x8103b30 -> Node0x8105830;
	Node0x8103b30 -> Node0x8105640;
	Node0x8103b30 -> Node0x8105960;
	Node0x8103b30 -> Node0x81059f0;
	Node0x8103b30 -> Node0x8105a80;
	Node0x8103b30 -> Node0x8103860;
	Node0x8103b30 -> Node0x81038f0;
	Node0x8103b30 -> Node0x81056b0;
	Node0x8103b30 -> Node0x8103980;
	Node0x8103b30 -> Node0x8103a10;
	Node0x8103b30 -> Node0x8103aa0;
	Node0x8103b30 -> Node0x8103bc0;
	Node0x8103b30 -> Node0x8107680[style=dashed];
	Node0x8103b30 -> Node0x8107a90[style=dashed];
	Node0x8103b30 -> Node0x8107910[style=dashed];
	Node0x8103b30 -> Node0x8107e20[style=dashed];
	Node0x8103bc0 [shape=record,label="{  ret void}"];
	Node0x81031a0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x81031a0 -> Node0x8105af0;
	Node0x81031a0 -> Node0x8105b60;
	Node0x81031a0 -> Node0x8103350;
	Node0x81031a0 -> Node0x8103320;
	Node0x81031a0 -> Node0x81060a0;
	Node0x81031a0 -> Node0x81061a0;
	Node0x8105af0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x8105af0 -> Node0x8103320[style=dotted,label = "{DEF_USE}" ];
	Node0x8105b60 [shape=record,label="{  %s1 = alloca %struct.S1, align 8}"];
	Node0x8105b60 -> Node0x81060a0[style=dotted,label = "{DEF_USE}" ];
	Node0x8103350 [shape=record,label="{  %s2 = alloca %struct.S2, align 4}"];
	Node0x8103350 -> Node0x81060a0[style=dotted,label = "{DEF_USE}" ];
	Node0x8103320 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x81060a0 [shape=record,label="{  call void @func(%struct.S1* %s1, %struct.S2* %s2)}"];
	Node0x81060a0 -> Node0x8103b30;
	Node0x81060a0 -> Node0x8109790[style=dashed];
	Node0x81060a0 -> Node0x8109bc0[style=dashed];
	Node0x81060a0 -> Node0x8109a40[style=dashed];
	Node0x81060a0 -> Node0x8109e50[style=dashed];
	Node0x81061a0 [shape=record,label="{  ret i32 0}"];
	Node0x8107680 [shape=record,label="{FORMAL_IN:%struct.S1*}"];
	Node0x8107680 -> Node0x81076f0[style=dashed];
	Node0x8107680 -> Node0x8107760[style=dashed];
	Node0x8107680 -> Node0x8107a90[style=dashed];
	Node0x8107680 -> Node0x81055b0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x81076f0 [shape=record,label="{1 float}"];
	Node0x81076f0 -> Node0x8107b00[style=dashed];
	Node0x8107760 [shape=record,label="{2 %struct.S2*}"];
	Node0x8107760 -> Node0x8107800[style=dashed];
	Node0x8107760 -> Node0x8107870[style=dashed];
	Node0x8107760 -> Node0x81031d0[style=dashed];
	Node0x8107760 -> Node0x8105830[style=dotted, label = "{DATA_GENERAL}"];
	Node0x8107800 [shape=record,label="{3 i32}"];
	Node0x8107800 -> Node0x8103270[style=dashed];
	Node0x8107870 [shape=record,label="{4 i32}"];
	Node0x8107870 -> Node0x8107d80[style=dashed];
	Node0x8107910 [shape=record,label="{FORMAL_IN:%struct.S2*}"];
	Node0x8107910 -> Node0x8107980[style=dashed];
	Node0x8107910 -> Node0x81079f0[style=dashed];
	Node0x8107910 -> Node0x8107e20[style=dashed];
	Node0x8107910 -> Node0x8105830[style=dotted, label = "{DATA_GENERAL}"];
	Node0x8107980 [shape=record,label="{6 i32}"];
	Node0x8107980 -> Node0x8107e90[style=dashed];
	Node0x81079f0 [shape=record,label="{7 i32}"];
	Node0x81079f0 -> Node0x8107f00[style=dashed];
	Node0x8107a90 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x8107a90 -> Node0x8107b00[style=dashed];
	Node0x8107a90 -> Node0x81031d0[style=dashed];
	Node0x8107a90 -> Node0x8109bc0[style=dashed];
	Node0x8107b00 [shape=record,label="{1 float}"];
	Node0x8107b00 -> Node0x8109c30[style=dashed];
	Node0x81031d0 [shape=record,label="{2 %struct.S2*}"];
	Node0x81031d0 -> Node0x8103270[style=dashed];
	Node0x81031d0 -> Node0x8107d80[style=dashed];
	Node0x81031d0 -> Node0x8109ca0[style=dashed];
	Node0x8103270 [shape=record,label="{3 i32}"];
	Node0x8103270 -> Node0x8109d40[style=dashed];
	Node0x8107d80 [shape=record,label="{4 i32}"];
	Node0x8107d80 -> Node0x8109db0[style=dashed];
	Node0x8107e20 [shape=record,label="{FORMAL_OUT:%struct.S2*}"];
	Node0x8107e20 -> Node0x8107e90[style=dashed];
	Node0x8107e20 -> Node0x8107f00[style=dashed];
	Node0x8107e20 -> Node0x8109e50[style=dashed];
	Node0x8107e90 [shape=record,label="{1 i32}"];
	Node0x8107e90 -> Node0x8109ec0[style=dashed];
	Node0x8107f00 [shape=record,label="{2 i32}"];
	Node0x8107f00 -> Node0x8109f30[style=dashed];
	Node0x8109790 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x8109790 -> Node0x8109800[style=dashed];
	Node0x8109790 -> Node0x8109890[style=dashed];
	Node0x8109790 -> Node0x8107680[style=dashed];
	Node0x8109800 [shape=record,label="{4 float}"];
	Node0x8109800 -> Node0x81076f0[style=dashed];
	Node0x8109890 [shape=record,label="{5 %struct.S2*}"];
	Node0x8109890 -> Node0x8109930[style=dashed];
	Node0x8109890 -> Node0x81099a0[style=dashed];
	Node0x8109890 -> Node0x8107760[style=dashed];
	Node0x8109930 [shape=record,label="{6 i32}"];
	Node0x8109930 -> Node0x8107800[style=dashed];
	Node0x81099a0 [shape=record,label="{7 i32}"];
	Node0x81099a0 -> Node0x8107870[style=dashed];
	Node0x8109a40 [shape=record,label="{ACTUAL_IN:%struct.S2*}"];
	Node0x8109a40 -> Node0x8109ab0[style=dashed];
	Node0x8109a40 -> Node0x8109b20[style=dashed];
	Node0x8109a40 -> Node0x8107910[style=dashed];
	Node0x8109ab0 [shape=record,label="{14 i32}"];
	Node0x8109ab0 -> Node0x8107980[style=dashed];
	Node0x8109b20 [shape=record,label="{15 i32}"];
	Node0x8109b20 -> Node0x81079f0[style=dashed];
	Node0x8109bc0 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x8109bc0 -> Node0x8109c30[style=dashed];
	Node0x8109bc0 -> Node0x8109ca0[style=dashed];
	Node0x8109c30 [shape=record,label="{9 float}"];
	Node0x8109ca0 [shape=record,label="{10 %struct.S2*}"];
	Node0x8109ca0 -> Node0x8109d40[style=dashed];
	Node0x8109ca0 -> Node0x8109db0[style=dashed];
	Node0x8109d40 [shape=record,label="{11 i32}"];
	Node0x8109db0 [shape=record,label="{12 i32}"];
	Node0x8109e50 [shape=record,label="{ACTUAL_OUT:%struct.S2*}"];
	Node0x8109e50 -> Node0x8109ec0[style=dashed];
	Node0x8109e50 -> Node0x8109f30[style=dashed];
	Node0x8109ec0 [shape=record,label="{17 i32}"];
	Node0x8109f30 [shape=record,label="{18 i32}"];
}
