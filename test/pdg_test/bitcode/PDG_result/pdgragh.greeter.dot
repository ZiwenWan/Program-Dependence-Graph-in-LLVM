digraph "Program Dependency Graph for 'greeter' function" {
	label="Program Dependency Graph for 'greeter' function";

	Node0x995b490 [shape=record,label="{  %str.addr = alloca i8*, align 8}"];
	Node0x995b490 -> Node0x995b500[style=dotted,label = "{DEF_USE}" ];
	Node0x995b490 -> Node0x995b570[style=dotted,label = "{DEF_USE}" ];
	Node0x995b500 [shape=record,label="{  store i8* %str, i8** %str.addr, align 8}"];
	Node0x995b500 -> Node0x995b570[style=dotted,label = "{RAW} str.addr"];
	Node0x995b570 [shape=record,label="{  %0 = load i8*, i8** %str.addr, align 8}"];
	Node0x995b570 -> Node0x995b6b0[style=dotted,label = "{DEF_USE}" ];
	Node0x995b6b0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)}"];
	Node0x995b720 [shape=record,label="{\<\<ENTRY\>\> greeter}"];
	Node0x995b720 -> Node0x995b490;
	Node0x995b720 -> Node0x995b500;
	Node0x995b720 -> Node0x995b570;
	Node0x995b720 -> Node0x995b6b0;
	Node0x995b720 -> Node0x995b5e0;
	Node0x995b720 -> Node0x995d340;
	Node0x995b720 -> Node0x99796c0[style=dashed];
	Node0x995b720 -> Node0x9979730[style=dashed];
	Node0x995b5e0 [shape=record,label="{  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0))}"];
	Node0x995d340 [shape=record,label="{  ret void}"];
	Node0x9963ff0 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x9963ff0 -> Node0x9965480[style=dotted,label = "{DEF_USE}" ];
	Node0x9963ff0 -> Node0x9963610[style=dotted,label = "{DEF_USE}" ];
	Node0x9963ff0 -> Node0x9963790[style=dotted,label = "{DEF_USE}" ];
	Node0x9965480 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x9965480 -> Node0x9963610[style=dotted,label = "{RAW} sz.addr"];
	Node0x9965480 -> Node0x9963790[style=dotted,label = "{RAW} sz.addr"];
	Node0x9963610 [shape=record,label="{  %0 = load i32, i32* %sz.addr, align 4}"];
	Node0x9963610 -> Node0x9965590[style=dotted,label = "{DEF_USE}" ];
	Node0x99636b0 [shape=record,label="{GLOBAL_VALUE:@i = common global i32 0, align 4}"];
	Node0x99636b0 -> Node0x9963720[style=dotted];
	Node0x99636b0 -> Node0x9963920[style=dotted];
	Node0x99636b0 -> Node0x99639c0[style=dotted];
	Node0x99636b0 -> Node0x9964470[style=dotted];
	Node0x99636b0 -> Node0x9964630[style=dotted];
	Node0x99636b0 -> Node0x996b440[style=dotted];
	Node0x99636b0 -> Node0x996b590[style=dotted];
	Node0x99636b0 -> Node0x996b600[style=dotted];
	Node0x99636b0 -> Node0x996f330[style=dotted];
	Node0x99636b0 -> Node0x996f6e0[style=dotted];
	Node0x99636b0 -> Node0x996f750[style=dotted];
	Node0x9963720 [shape=record,label="{  %1 = load i32, i32* @i, align 4}"];
	Node0x9963720 -> Node0x9963c10[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9963720 -> Node0x9963ca0[style=dotted,label = "{DEF_USE}" ];
	Node0x9963720 -> Node0x9963d90[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9963790 [shape=record,label="{  %2 = load i32, i32* %sz.addr, align 4}"];
	Node0x9963790 -> Node0x9963610[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9963790 -> Node0x9963ca0[style=dotted,label = "{DEF_USE}" ];
	Node0x9963840 [shape=record,label="{GLOBAL_VALUE:@key = common global i8* null, align 8}"];
	Node0x9963840 -> Node0x99638b0[style=dotted];
	Node0x9963840 -> Node0x996b3a0[style=dotted];
	Node0x99638b0 [shape=record,label="{  %3 = load i8*, i8** @key, align 8}"];
	Node0x99638b0 -> Node0x9963b80[style=dotted, label = "{DATA_GENERAL}"];
	Node0x99638b0 -> Node0x9961e90[style=dotted,label = "{DEF_USE}" ];
	Node0x99638b0 -> Node0x9961f00[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9963920 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x9963920 -> Node0x9963720[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9963920 -> Node0x9961d90[style=dotted,label = "{DEF_USE}" ];
	Node0x99639c0 [shape=record,label="{  %5 = load i32, i32* @i, align 4}"];
	Node0x99639c0 -> Node0x9961f00[style=dotted, label = "{DATA_GENERAL}"];
	Node0x99639c0 -> Node0x9961dc0[style=dotted,label = "{DEF_USE}" ];
	Node0x9965590 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x9965590 -> Node0x99635c0[style=dotted,label = "{DEF_USE}" ];
	Node0x99635c0 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #4}"];
	Node0x9963b80 [shape=record,label="{  store i8* %call, i8** @key, align 8}"];
	Node0x9963b80 -> Node0x99638b0[style=dotted,label = "{RAW} key"];
	Node0x9963c10 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x9963c10 -> Node0x9963720[style=dotted,label = "{RAW} i"];
	Node0x9963c10 -> Node0x9963920[style=dotted,label = "{RAW} i"];
	Node0x9963c10 -> Node0x99639c0[style=dotted,label = "{RAW} i"];
	Node0x9963ca0 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x9963ca0 -> Node0x9961b40[style=dotted,label = "{DEF_USE}" ];
	Node0x9963d90 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x9963d90 -> Node0x9963720[style=dotted,label = "{RAW} i"];
	Node0x9963d90 -> Node0x9963920[style=dotted,label = "{RAW} i"];
	Node0x9963d90 -> Node0x99639c0[style=dotted,label = "{RAW} i"];
	Node0x9963dc0 [shape=record,label="{\<\<ENTRY\>\> initkey}"];
	Node0x9963dc0 -> Node0x9963ff0;
	Node0x9963dc0 -> Node0x9965480;
	Node0x9963dc0 -> Node0x9963610;
	Node0x9963dc0 -> Node0x9965590;
	Node0x9963dc0 -> Node0x99635c0;
	Node0x9963dc0 -> Node0x9963b80;
	Node0x9963dc0 -> Node0x9963c10;
	Node0x9963dc0 -> Node0x9961ac0;
	Node0x9963dc0 -> Node0x9963720;
	Node0x9963dc0 -> Node0x9963790;
	Node0x9963dc0 -> Node0x9963ca0;
	Node0x9963dc0 -> Node0x9961b40;
	Node0x9963dc0 -> Node0x9961d20;
	Node0x9963dc0 -> Node0x997a210[style=dashed];
	Node0x9963dc0 -> Node0x997a280[style=dashed];
	Node0x9961ac0 [shape=record,label="{  br label %for.cond}"];
	Node0x9961b40 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x9961b40 -> Node0x9963720;
	Node0x9961b40 -> Node0x9963790;
	Node0x9961b40 -> Node0x9963ca0;
	Node0x9961b40 -> Node0x99638b0;
	Node0x9961b40 -> Node0x9963920;
	Node0x9961b40 -> Node0x9961d90;
	Node0x9961b40 -> Node0x9961e90;
	Node0x9961b40 -> Node0x9961f00;
	Node0x9961b40 -> Node0x9961f70;
	Node0x9961b40 -> Node0x99639c0;
	Node0x9961b40 -> Node0x9961dc0;
	Node0x9961b40 -> Node0x9963d90;
	Node0x9961b40 -> Node0x99620f0;
	Node0x9961d20 [shape=record,label="{  ret void}"];
	Node0x9961d90 [shape=record,label="{  %idxprom = zext i32 %4 to i64}"];
	Node0x9961d90 -> Node0x9961e90[style=dotted,label = "{DEF_USE}" ];
	Node0x9961e90 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom}"];
	Node0x9961e90 -> Node0x9961f00[style=dotted,label = "{DEF_USE}" ];
	Node0x9961f00 [shape=record,label="{  store i8 1, i8* %arrayidx, align 1}"];
	Node0x9961f00 -> Node0x9963720[style=dotted,label = "{RAW} i"];
	Node0x9961f00 -> Node0x99638b0[style=dotted,label = "{RAW} key"];
	Node0x9961f00 -> Node0x9963920[style=dotted,label = "{RAW} i"];
	Node0x9961f00 -> Node0x99639c0[style=dotted,label = "{RAW} i"];
	Node0x9961f70 [shape=record,label="{  br label %for.inc}"];
	Node0x9961dc0 [shape=record,label="{  %inc = add i32 %5, 1}"];
	Node0x9961dc0 -> Node0x9963d90[style=dotted,label = "{DEF_USE}" ];
	Node0x99620f0 [shape=record,label="{  br label %for.cond}"];
	Node0x9965430 [shape=record,label="{\<\<ENTRY\>\> encrypt}"];
	Node0x9965430 -> Node0x996e2c0;
	Node0x9965430 -> Node0x996e330;
	Node0x9965430 -> Node0x996d420;
	Node0x9965430 -> Node0x996d3f0;
	Node0x9965430 -> Node0x996d520;
	Node0x9965430 -> Node0x996d620;
	Node0x9965430 -> Node0x996d690;
	Node0x9965430 -> Node0x996d700;
	Node0x9965430 -> Node0x996d770;
	Node0x9965430 -> Node0x996d590;
	Node0x9965430 -> Node0x9964470;
	Node0x9965430 -> Node0x99644e0;
	Node0x9965430 -> Node0x9964550;
	Node0x9965430 -> Node0x99645c0;
	Node0x9965430 -> Node0x996b670;
	Node0x9965430 -> Node0x997b370[style=dashed];
	Node0x9965430 -> Node0x997b3e0[style=dashed];
	Node0x9965430 -> Node0x9964380[style=dashed];
	Node0x9965430 -> Node0x9964440[style=dashed];
	Node0x996e2c0 [shape=record,label="{  %plaintext.addr = alloca i8*, align 8}"];
	Node0x996e2c0 -> Node0x996d420[style=dotted,label = "{DEF_USE}" ];
	Node0x996e2c0 -> Node0x996b750[style=dotted,label = "{DEF_USE}" ];
	Node0x996e330 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x996e330 -> Node0x996d3f0[style=dotted,label = "{DEF_USE}" ];
	Node0x996e330 -> Node0x996d520[style=dotted,label = "{DEF_USE}" ];
	Node0x996e330 -> Node0x99644e0[style=dotted,label = "{DEF_USE}" ];
	Node0x996d420 [shape=record,label="{  store i8* %plaintext, i8** %plaintext.addr, align 8}"];
	Node0x996d420 -> Node0x996b750[style=dotted,label = "{RAW} plaintext.addr"];
	Node0x996d3f0 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x996d3f0 -> Node0x996d520[style=dotted,label = "{RAW} sz.addr"];
	Node0x996d3f0 -> Node0x99644e0[style=dotted,label = "{RAW} sz.addr"];
	Node0x996d520 [shape=record,label="{  %0 = load i32, i32* %sz.addr, align 4}"];
	Node0x996d520 -> Node0x996d620[style=dotted,label = "{DEF_USE}" ];
	Node0x996d620 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x996d620 -> Node0x996d690[style=dotted,label = "{DEF_USE}" ];
	Node0x996d690 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #4}"];
	Node0x996d700 [shape=record,label="{  store i8* %call, i8** @ciphertext, align 8}"];
	Node0x996d700 -> Node0x996b840[style=dotted,label = "{RAW} arrayidx"];
	Node0x996d700 -> Node0x996b8d0[style=dotted,label = "{RAW} arrayidx4"];
	Node0x996d700 -> Node0x996b520[style=dotted,label = "{RAW} ciphertext"];
	Node0x996d770 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x996d770 -> Node0x9964470[style=dotted,label = "{RAW} i"];
	Node0x996d770 -> Node0x9964630[style=dotted,label = "{RAW} i"];
	Node0x996d770 -> Node0x996b840[style=dotted,label = "{RAW} arrayidx"];
	Node0x996d770 -> Node0x996b440[style=dotted,label = "{RAW} i"];
	Node0x996d770 -> Node0x996b8d0[style=dotted,label = "{RAW} arrayidx4"];
	Node0x996d770 -> Node0x996b590[style=dotted,label = "{RAW} i"];
	Node0x996d770 -> Node0x996b600[style=dotted,label = "{RAW} i"];
	Node0x996d590 [shape=record,label="{  br label %for.cond}"];
	Node0x9964470 [shape=record,label="{  %1 = load i32, i32* @i, align 4}"];
	Node0x9964470 -> Node0x996d770[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9964470 -> Node0x9964550[style=dotted,label = "{DEF_USE}" ];
	Node0x9964470 -> Node0x996ba50[style=dotted, label = "{DATA_GENERAL}"];
	Node0x99644e0 [shape=record,label="{  %2 = load i32, i32* %sz.addr, align 4}"];
	Node0x99644e0 -> Node0x996d520[style=dotted, label = "{DATA_GENERAL}"];
	Node0x99644e0 -> Node0x9964550[style=dotted,label = "{DEF_USE}" ];
	Node0x9964550 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x9964550 -> Node0x99645c0[style=dotted,label = "{DEF_USE}" ];
	Node0x99645c0 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x99645c0 -> Node0x9964470;
	Node0x99645c0 -> Node0x99644e0;
	Node0x99645c0 -> Node0x9964550;
	Node0x99645c0 -> Node0x996b750;
	Node0x99645c0 -> Node0x9964630;
	Node0x99645c0 -> Node0x996bae0;
	Node0x99645c0 -> Node0x996bc30;
	Node0x99645c0 -> Node0x996b840;
	Node0x99645c0 -> Node0x996bca0;
	Node0x99645c0 -> Node0x996b3a0;
	Node0x99645c0 -> Node0x996b440;
	Node0x99645c0 -> Node0x996bb60;
	Node0x99645c0 -> Node0x996be20;
	Node0x99645c0 -> Node0x996b8d0;
	Node0x99645c0 -> Node0x996bb10;
	Node0x99645c0 -> Node0x996bed0;
	Node0x99645c0 -> Node0x996bf40;
	Node0x99645c0 -> Node0x996b520;
	Node0x99645c0 -> Node0x996b590;
	Node0x99645c0 -> Node0x996bd10;
	Node0x99645c0 -> Node0x996bd80;
	Node0x99645c0 -> Node0x996bdf0;
	Node0x99645c0 -> Node0x99621e0;
	Node0x99645c0 -> Node0x996b600;
	Node0x99645c0 -> Node0x9962250;
	Node0x99645c0 -> Node0x996ba50;
	Node0x99645c0 -> Node0x99622c0;
	Node0x9964630 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x9964630 -> Node0x9964470[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9964630 -> Node0x996bae0[style=dotted,label = "{DEF_USE}" ];
	Node0x996b3a0 [shape=record,label="{  %6 = load i8*, i8** @key, align 8}"];
	Node0x996b3a0 -> Node0x996be20[style=dotted,label = "{DEF_USE}" ];
	Node0x996b3a0 -> Node0x996bdf0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b440 [shape=record,label="{  %7 = load i32, i32* @i, align 4}"];
	Node0x996b440 -> Node0x9964470[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b440 -> Node0x996bb60[style=dotted,label = "{DEF_USE}" ];
	Node0x996b4b0 [shape=record,label="{GLOBAL_VALUE:@ciphertext = common global i8* null, align 8}"];
	Node0x996b4b0 -> Node0x996b520[style=dotted];
	Node0x996b4b0 -> Node0x996f640[style=dotted];
	Node0x996b520 [shape=record,label="{  %9 = load i8*, i8** @ciphertext, align 8}"];
	Node0x996b520 -> Node0x996d700[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b520 -> Node0x996bd80[style=dotted,label = "{DEF_USE}" ];
	Node0x996b520 -> Node0x996bdf0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b590 [shape=record,label="{  %10 = load i32, i32* @i, align 4}"];
	Node0x996b590 -> Node0x9964470[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b590 -> Node0x996bd10[style=dotted,label = "{DEF_USE}" ];
	Node0x996b600 [shape=record,label="{  %11 = load i32, i32* @i, align 4}"];
	Node0x996b600 -> Node0x996bdf0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b600 -> Node0x9962250[style=dotted,label = "{DEF_USE}" ];
	Node0x996b670 [shape=record,label="{  ret void}"];
	Node0x996b750 [shape=record,label="{  %3 = load i8*, i8** %plaintext.addr, align 8}"];
	Node0x996b750 -> Node0x996d420[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996b750 -> Node0x996bc30[style=dotted,label = "{DEF_USE}" ];
	Node0x996b840 [shape=record,label="{  %5 = load i8, i8* %arrayidx, align 1}"];
	Node0x996b840 -> Node0x996bca0[style=dotted,label = "{DEF_USE}" ];
	Node0x996b8d0 [shape=record,label="{  %8 = load i8, i8* %arrayidx4, align 1}"];
	Node0x996b8d0 -> Node0x996bb10[style=dotted,label = "{DEF_USE}" ];
	Node0x996ba50 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x996ba50 -> Node0x9964470[style=dotted,label = "{RAW} i"];
	Node0x996ba50 -> Node0x9964630[style=dotted,label = "{RAW} i"];
	Node0x996ba50 -> Node0x996b840[style=dotted,label = "{RAW} arrayidx"];
	Node0x996ba50 -> Node0x996b440[style=dotted,label = "{RAW} i"];
	Node0x996ba50 -> Node0x996b8d0[style=dotted,label = "{RAW} arrayidx4"];
	Node0x996ba50 -> Node0x996b590[style=dotted,label = "{RAW} i"];
	Node0x996ba50 -> Node0x996b600[style=dotted,label = "{RAW} i"];
	Node0x996bae0 [shape=record,label="{  %idxprom = zext i32 %4 to i64}"];
	Node0x996bae0 -> Node0x996bc30[style=dotted,label = "{DEF_USE}" ];
	Node0x996bc30 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom}"];
	Node0x996bc30 -> Node0x996b840[style=dotted,label = "{DEF_USE}" ];
	Node0x996bca0 [shape=record,label="{  %conv2 = sext i8 %5 to i32}"];
	Node0x996bca0 -> Node0x996bed0[style=dotted,label = "{DEF_USE}" ];
	Node0x996bb60 [shape=record,label="{  %idxprom3 = zext i32 %7 to i64}"];
	Node0x996bb60 -> Node0x996be20[style=dotted,label = "{DEF_USE}" ];
	Node0x996be20 [shape=record,label="{  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 %idxprom3}"];
	Node0x996be20 -> Node0x996b8d0[style=dotted,label = "{DEF_USE}" ];
	Node0x996bb10 [shape=record,label="{  %conv5 = sext i8 %8 to i32}"];
	Node0x996bb10 -> Node0x996bed0[style=dotted,label = "{DEF_USE}" ];
	Node0x996bed0 [shape=record,label="{  %xor = xor i32 %conv2, %conv5}"];
	Node0x996bed0 -> Node0x996bf40[style=dotted,label = "{DEF_USE}" ];
	Node0x996bf40 [shape=record,label="{  %conv6 = trunc i32 %xor to i8}"];
	Node0x996bf40 -> Node0x996bdf0[style=dotted,label = "{DEF_USE}" ];
	Node0x996bd10 [shape=record,label="{  %idxprom7 = zext i32 %10 to i64}"];
	Node0x996bd10 -> Node0x996bd80[style=dotted,label = "{DEF_USE}" ];
	Node0x996bd80 [shape=record,label="{  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 %idxprom7}"];
	Node0x996bd80 -> Node0x996bdf0[style=dotted,label = "{DEF_USE}" ];
	Node0x996bdf0 [shape=record,label="{  store i8 %conv6, i8* %arrayidx8, align 1}"];
	Node0x996bdf0 -> Node0x9964470[style=dotted,label = "{RAW} i"];
	Node0x996bdf0 -> Node0x9964630[style=dotted,label = "{RAW} i"];
	Node0x996bdf0 -> Node0x996b840[style=dotted,label = "{RAW} arrayidx"];
	Node0x996bdf0 -> Node0x996b3a0[style=dotted,label = "{RAW} key"];
	Node0x996bdf0 -> Node0x996b440[style=dotted,label = "{RAW} i"];
	Node0x996bdf0 -> Node0x996b8d0[style=dotted,label = "{RAW} arrayidx4"];
	Node0x996bdf0 -> Node0x996b520[style=dotted,label = "{RAW} ciphertext"];
	Node0x996bdf0 -> Node0x996b590[style=dotted,label = "{RAW} i"];
	Node0x996bdf0 -> Node0x996b600[style=dotted,label = "{RAW} i"];
	Node0x99621e0 [shape=record,label="{  br label %for.inc}"];
	Node0x9962250 [shape=record,label="{  %inc = add i32 %11, 1}"];
	Node0x9962250 -> Node0x996ba50[style=dotted,label = "{DEF_USE}" ];
	Node0x99622c0 [shape=record,label="{  br label %for.cond}"];
	Node0x99653e0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x99653e0 -> Node0x99777b0;
	Node0x99653e0 -> Node0x9977820;
	Node0x99653e0 -> Node0x99778c0;
	Node0x99653e0 -> Node0x9977890;
	Node0x99653e0 -> Node0x99778f0;
	Node0x99653e0 -> Node0x996ed30;
	Node0x99653e0 -> Node0x9975cf0;
	Node0x99653e0 -> Node0x9975d60;
	Node0x99653e0 -> Node0x9975dd0;
	Node0x99653e0 -> Node0x996eca0;
	Node0x99653e0 -> Node0x9975f50;
	Node0x99653e0 -> Node0x9975fc0;
	Node0x99653e0 -> Node0x9976030;
	Node0x99653e0 -> Node0x99760a0;
	Node0x99653e0 -> Node0x99760d0;
	Node0x99653e0 -> Node0x996ee40;
	Node0x99653e0 -> Node0x996eeb0;
	Node0x99653e0 -> Node0x9975e40;
	Node0x99653e0 -> Node0x9975eb0;
	Node0x99653e0 -> Node0x9975f20;
	Node0x99653e0 -> Node0x996f170;
	Node0x99653e0 -> Node0x996f1e0;
	Node0x99653e0 -> Node0x996f250;
	Node0x99653e0 -> Node0x996f2c0;
	Node0x99653e0 -> Node0x996f330;
	Node0x99653e0 -> Node0x99646a0;
	Node0x99653e0 -> Node0x9964710;
	Node0x99653e0 -> Node0x996f4f0;
	Node0x99653e0 -> Node0x996f560;
	Node0x99653e0 -> Node0x996f5d0;
	Node0x99653e0 -> Node0x996f7c0;
	Node0x99777b0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x99777b0 -> Node0x9977890[style=dotted,label = "{DEF_USE}" ];
	Node0x9977820 [shape=record,label="{  %username = alloca [20 x i8], align 16}"];
	Node0x9977820 -> Node0x996ed30[style=dotted,label = "{DEF_USE}" ];
	Node0x9977820 -> Node0x9975d60[style=dotted,label = "{DEF_USE}" ];
	Node0x99778c0 [shape=record,label="{  %text = alloca [1024 x i8], align 16}"];
	Node0x99778c0 -> Node0x9975f50[style=dotted,label = "{DEF_USE}" ];
	Node0x99778c0 -> Node0x9976030[style=dotted,label = "{DEF_USE}" ];
	Node0x99778c0 -> Node0x996eeb0[style=dotted,label = "{DEF_USE}" ];
	Node0x99778c0 -> Node0x9975e40[style=dotted,label = "{DEF_USE}" ];
	Node0x99778c0 -> Node0x9964710[style=dotted,label = "{DEF_USE}" ];
	Node0x9977890 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x99778f0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0))}"];
	Node0x996ed30 [shape=record,label="{  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %username, i32 0, i32 0}"];
	Node0x996ed30 -> Node0x9975cf0[style=dotted,label = "{DEF_USE}" ];
	Node0x9975cf0 [shape=record,label="{  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* %arraydecay)}"];
	Node0x9975d60 [shape=record,label="{  %arraydecay2 = getelementptr inbounds [20 x i8], [20 x i8]* %username, i32 0, i32 0}"];
	Node0x9975d60 -> Node0x9975dd0[style=dotted,label = "{DEF_USE}" ];
	Node0x9975dd0 [shape=record,label="{  call void @greeter(i8* %arraydecay2)}"];
	Node0x9975dd0 -> Node0x995b720;
	Node0x9975dd0 -> Node0x9979ab0[style=dashed];
	Node0x9975dd0 -> Node0x9979b50[style=dashed];
	Node0x996eca0 [shape=record,label="{  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0))}"];
	Node0x9975f50 [shape=record,label="{  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x9975f50 -> Node0x9975fc0[style=dotted,label = "{DEF_USE}" ];
	Node0x9975fc0 [shape=record,label="{  %call5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8* %arraydecay4)}"];
	Node0x9976030 [shape=record,label="{  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x9976030 -> Node0x99760a0[style=dotted,label = "{DEF_USE}" ];
	Node0x99760a0 [shape=record,label="{  %call7 = call i64 @strlen(i8* %arraydecay6) #4}"];
	Node0x99760d0 [shape=record,label="{  %conv = trunc i64 %call7 to i32}"];
	Node0x99760d0 -> Node0x996ee40[style=dotted,label = "{DEF_USE}" ];
	Node0x996ee40 [shape=record,label="{  call void @initkey(i32 %conv)}"];
	Node0x996ee40 -> Node0x9963dc0;
	Node0x996ee40 -> Node0x997a620[style=dashed];
	Node0x996ee40 -> Node0x997a6c0[style=dashed];
	Node0x996eeb0 [shape=record,label="{  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x996eeb0 -> Node0x996f170[style=dotted,label = "{DEF_USE}" ];
	Node0x9975e40 [shape=record,label="{  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x9975e40 -> Node0x9975eb0[style=dotted,label = "{DEF_USE}" ];
	Node0x9975eb0 [shape=record,label="{  %call10 = call i64 @strlen(i8* %arraydecay9) #4}"];
	Node0x9975f20 [shape=record,label="{  %conv11 = trunc i64 %call10 to i32}"];
	Node0x9975f20 -> Node0x996f170[style=dotted,label = "{DEF_USE}" ];
	Node0x996f170 [shape=record,label="{  call void @encrypt(i8* %arraydecay8, i32 %conv11)}"];
	Node0x996f170 -> Node0x9965430;
	Node0x996f170 -> Node0x997bc70[style=dashed];
	Node0x996f170 -> Node0x997bd10[style=dashed];
	Node0x996f170 -> Node0x997bce0[style=dashed];
	Node0x996f170 -> Node0x997be10[style=dashed];
	Node0x996f1e0 [shape=record,label="{  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0))}"];
	Node0x996f250 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x996f250 -> Node0x996f330[style=dotted,label = "{RAW} i"];
	Node0x996f250 -> Node0x996f6e0[style=dotted,label = "{RAW} i"];
	Node0x996f250 -> Node0x997bfe0[style=dotted,label = "{RAW} arrayidx"];
	Node0x996f250 -> Node0x996f750[style=dotted,label = "{RAW} i"];
	Node0x996f2c0 [shape=record,label="{  br label %for.cond}"];
	Node0x996f330 [shape=record,label="{  %0 = load i32, i32* @i, align 4}"];
	Node0x996f330 -> Node0x996f250[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996f330 -> Node0x99646a0[style=dotted,label = "{DEF_USE}" ];
	Node0x996f330 -> Node0x997c0a0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x99646a0 [shape=record,label="{  %conv13 = zext i32 %0 to i64}"];
	Node0x99646a0 -> Node0x996f560[style=dotted,label = "{DEF_USE}" ];
	Node0x9964710 [shape=record,label="{  %arraydecay14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x9964710 -> Node0x996f4f0[style=dotted,label = "{DEF_USE}" ];
	Node0x996f4f0 [shape=record,label="{  %call15 = call i64 @strlen(i8* %arraydecay14) #4}"];
	Node0x996f560 [shape=record,label="{  %cmp = icmp ult i64 %conv13, %call15}"];
	Node0x996f560 -> Node0x996f5d0[style=dotted,label = "{DEF_USE}" ];
	Node0x996f5d0 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x996f5d0 -> Node0x996f330;
	Node0x996f5d0 -> Node0x99646a0;
	Node0x996f5d0 -> Node0x9964710;
	Node0x996f5d0 -> Node0x996f4f0;
	Node0x996f5d0 -> Node0x996f560;
	Node0x996f5d0 -> Node0x996f640;
	Node0x996f5d0 -> Node0x996f6e0;
	Node0x996f5d0 -> Node0x997bfb0;
	Node0x996f5d0 -> Node0x997c2e0;
	Node0x996f5d0 -> Node0x997bfe0;
	Node0x996f5d0 -> Node0x997c1a0;
	Node0x996f5d0 -> Node0x997c210;
	Node0x996f5d0 -> Node0x996fc90;
	Node0x996f5d0 -> Node0x996f750;
	Node0x996f5d0 -> Node0x996fd00;
	Node0x996f5d0 -> Node0x997c0a0;
	Node0x996f5d0 -> Node0x996fd70;
	Node0x996f640 [shape=record,label="{  %1 = load i8*, i8** @ciphertext, align 8}"];
	Node0x996f640 -> Node0x996f1e0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996f640 -> Node0x997c2e0[style=dotted,label = "{DEF_USE}" ];
	Node0x996f640 -> Node0x997c210[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996f6e0 [shape=record,label="{  %2 = load i32, i32* @i, align 4}"];
	Node0x996f6e0 -> Node0x996f330[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996f6e0 -> Node0x997bfb0[style=dotted,label = "{DEF_USE}" ];
	Node0x996f750 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x996f750 -> Node0x997c210[style=dotted, label = "{DATA_GENERAL}"];
	Node0x996f750 -> Node0x996fd00[style=dotted,label = "{DEF_USE}" ];
	Node0x996f7c0 [shape=record,label="{  ret i32 0}"];
	Node0x99796c0 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x99796c0 -> Node0x9979730[style=dashed];
	Node0x99796c0 -> Node0x995b500[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9979730 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x9979730 -> Node0x9979b50[style=dashed];
	Node0x9979ab0 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x9979ab0 -> Node0x99796c0[style=dashed];
	Node0x9979b50 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x9979b50 -> Node0x996f640[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a210 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x997a210 -> Node0x997a280[style=dashed];
	Node0x997a210 -> Node0x9965480[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a210 -> Node0x9963c10[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a210 -> Node0x9963d90[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a280 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x997a280 -> Node0x997a6c0[style=dashed];
	Node0x997a620 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x997a620 -> Node0x997a210[style=dashed];
	Node0x997a6c0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x997a6c0 -> Node0x996f330[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a6c0 -> Node0x996f6e0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997a6c0 -> Node0x996f750[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997b370 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x997b370 -> Node0x997b3e0[style=dashed];
	Node0x997b370 -> Node0x996d420[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997b370 -> Node0x996d700[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997b3e0 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x997b3e0 -> Node0x997bd10[style=dashed];
	Node0x9964380 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x9964380 -> Node0x9964440[style=dashed];
	Node0x9964380 -> Node0x996d3f0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9964380 -> Node0x996d770[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9964380 -> Node0x996ba50[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9964440 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x9964440 -> Node0x997be10[style=dashed];
	Node0x997bc70 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x997bc70 -> Node0x997b370[style=dashed];
	Node0x997bd10 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x997bd10 -> Node0x996f640[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997bce0 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x997bce0 -> Node0x9964380[style=dashed];
	Node0x997be10 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x997be10 -> Node0x996f330[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997be10 -> Node0x996f6e0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997be10 -> Node0x996f750[style=dotted, label = "{DATA_GENERAL}"];
	Node0x997bfe0 [shape=record,label="{  %3 = load i8, i8* %arrayidx, align 1}"];
	Node0x997bfe0 -> Node0x997c1a0[style=dotted,label = "{DEF_USE}" ];
	Node0x997c0a0 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x997c0a0 -> Node0x996f330[style=dotted,label = "{RAW} i"];
	Node0x997c0a0 -> Node0x996f6e0[style=dotted,label = "{RAW} i"];
	Node0x997c0a0 -> Node0x997bfe0[style=dotted,label = "{RAW} arrayidx"];
	Node0x997c0a0 -> Node0x996f750[style=dotted,label = "{RAW} i"];
	Node0x997bfb0 [shape=record,label="{  %idxprom = zext i32 %2 to i64}"];
	Node0x997bfb0 -> Node0x997c2e0[style=dotted,label = "{DEF_USE}" ];
	Node0x997c2e0 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom}"];
	Node0x997c2e0 -> Node0x997bfe0[style=dotted,label = "{DEF_USE}" ];
	Node0x997c1a0 [shape=record,label="{  %conv17 = sext i8 %3 to i32}"];
	Node0x997c1a0 -> Node0x997c210[style=dotted,label = "{DEF_USE}" ];
	Node0x997c210 [shape=record,label="{  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 %conv17)}"];
	Node0x996fc90 [shape=record,label="{  br label %for.inc}"];
	Node0x996fd00 [shape=record,label="{  %inc = add i32 %4, 1}"];
	Node0x996fd00 -> Node0x997c0a0[style=dotted,label = "{DEF_USE}" ];
	Node0x996fd70 [shape=record,label="{  br label %for.cond}"];
}
