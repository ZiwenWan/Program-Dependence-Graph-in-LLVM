digraph "Data dependency graph for 'main' function" {
	label="Data dependency graph for 'main' function";

	Node0x8aa99d0 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x8aa99d0 -> Node0x8aa9af0;
	Node0x8aa99d0 -> Node0x8aa9c00;
	Node0x8aa9a60 [shape=record,label="{  %b.addr = alloca float, align 4}"];
	Node0x8aa9a60 -> Node0x8aa9b90;
	Node0x8aa9a60 -> Node0x8aaaf30;
	Node0x8aa9af0 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x8aa9af0 -> Node0x8aa9c00;
	Node0x8aa9b90 [shape=record,label="{  store float %b, float* %b.addr, align 4}"];
	Node0x8aa9b90 -> Node0x8aaaf30;
	Node0x8aa9c00 [shape=record,label="{  %0 = load i32, i32* %a.addr, align 4}"];
	Node0x8aa9c00 -> Node0x8aab040;
	Node0x8aaaf30 [shape=record,label="{  %1 = load float, float* %b.addr, align 4}"];
	Node0x8aaaf30 -> Node0x8aaafd0;
	Node0x8aaafd0 [shape=record,label="{  %conv = fpext float %1 to double}"];
	Node0x8aaafd0 -> Node0x8aab040;
	Node0x8aab040 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %0, double %conv)}"];
	Node0x8aab0f0 [shape=record,label="{  ret void}"];
	Node0x8aab2f0 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x8aab2f0 -> Node0x8aab3d0;
	Node0x8aab2f0 -> Node0x8aab4f0;
	Node0x8aab360 [shape=record,label="{  %b.addr = alloca float, align 4}"];
	Node0x8aab360 -> Node0x8aab460;
	Node0x8aab360 -> Node0x8aac7c0;
	Node0x8aab3d0 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x8aab3d0 -> Node0x8aab4f0;
	Node0x8aab460 [shape=record,label="{  store float %b, float* %b.addr, align 4}"];
	Node0x8aab460 -> Node0x8aac7c0;
	Node0x8aab4f0 [shape=record,label="{  %0 = load i32, i32* %a.addr, align 4}"];
	Node0x8aab4f0 -> Node0x8aac860;
	Node0x8aac7c0 [shape=record,label="{  %1 = load float, float* %b.addr, align 4}"];
	Node0x8aac7c0 -> Node0x8aac860;
	Node0x8aac860 [shape=record,label="{  call void @f2(i32 %0, float %1)}"];
	Node0x8aac8f0 [shape=record,label="{  ret void}"];
	Node0x8aac770 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x8aac770 -> Node0x8aacb90;
	Node0x8aacab0 [shape=record,label="{  %a = alloca i32, align 4}"];
	Node0x8aacab0 -> Node0x8aacc00;
	Node0x8aacab0 -> Node0x8aacd20;
	Node0x8aacb20 [shape=record,label="{  %b = alloca float, align 4}"];
	Node0x8aacb20 -> Node0x8aacc90;
	Node0x8aacb20 -> Node0x8aa9c70;
	Node0x8aacb90 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x8aacc00 [shape=record,label="{  store i32 5, i32* %a, align 4}"];
	Node0x8aacc00 -> Node0x8aacd20;
	Node0x8aacc90 [shape=record,label="{  store float 5.500000e+00, float* %b, align 4}"];
	Node0x8aacc90 -> Node0x8aa9c70;
	Node0x8aacd20 [shape=record,label="{  %0 = load i32, i32* %a, align 4}"];
	Node0x8aacd20 -> Node0x8aae060;
	Node0x8aa9c70 [shape=record,label="{  %1 = load float, float* %b, align 4}"];
	Node0x8aa9c70 -> Node0x8aae060;
	Node0x8aae060 [shape=record,label="{  call void @f1(i32 %0, float %1)}"];
	Node0x8aae0d0 [shape=record,label="{  ret i32 0}"];
}
