digraph "Program Dependency Graph for 'func' function" {
	label="Program Dependency Graph for 'func' function";

	Node0x82866d0 [shape=record,label="{  %p1.addr = alloca %struct.S1*, align 8}"];
	Node0x82866d0 -> Node0x8286740[style=dotted,label = "{DEF_USE}" ];
	Node0x82866d0 -> Node0x82867b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8286740 [shape=record,label="{  store %struct.S1* %p1, %struct.S1** %p1.addr, align 8}"];
	Node0x8286740 -> Node0x82867b0[style=dotted,label = "{RAW} p1.addr"];
	Node0x82867b0 [shape=record,label="{  %0 = load %struct.S1*, %struct.S1** %p1.addr, align 8}"];
	Node0x82867b0 -> Node0x8286af0[style=dotted,label = "{DEF_USE}" ];
	Node0x8286950 [shape=record,label="{  %p2.addr = alloca %struct.S2*, align 8}"];
	Node0x8286950 -> Node0x82869c0[style=dotted,label = "{DEF_USE}" ];
	Node0x8286950 -> Node0x8286820[style=dotted,label = "{DEF_USE}" ];
	Node0x82869c0 [shape=record,label="{  store %struct.S2* %p2, %struct.S2** %p2.addr, align 8}"];
	Node0x82869c0 -> Node0x8286820[style=dotted,label = "{RAW} p2.addr"];
	Node0x8286820 [shape=record,label="{  %3 = load %struct.S2*, %struct.S2** %p2.addr, align 8}"];
	Node0x8286820 -> Node0x8284ac0[style=dotted,label = "{DEF_USE}" ];
	Node0x8286af0 [shape=record,label="{  %sp = getelementptr inbounds %struct.S1, %struct.S1* %0, i32 0, i32 1}"];
	Node0x8286af0 -> Node0x8286b60[style=dotted,label = "{DEF_USE}" ];
	Node0x8286b60 [shape=record,label="{  %1 = load %struct.S2*, %struct.S2** %sp, align 8}"];
	Node0x8286b60 -> Node0x8286bd0[style=dotted,label = "{DEF_USE}" ];
	Node0x8286bd0 [shape=record,label="{  %x = getelementptr inbounds %struct.S2, %struct.S2* %1, i32 0, i32 0}"];
	Node0x8286bd0 -> Node0x82849a0[style=dotted,label = "{DEF_USE}" ];
	Node0x82849a0 [shape=record,label="{  %2 = load i32, i32* %x, align 4}"];
	Node0x82849a0 -> Node0x8284a30[style=dotted,label = "{DEF_USE}" ];
	Node0x8284a30 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2)}"];
	Node0x8284ac0 [shape=record,label="{  %x1 = getelementptr inbounds %struct.S2, %struct.S2* %3, i32 0, i32 0}"];
	Node0x8284ac0 -> Node0x8284b50[style=dotted,label = "{DEF_USE}" ];
	Node0x8284b50 [shape=record,label="{  %4 = load i32, i32* %x1, align 4}"];
	Node0x8284b50 -> Node0x8284be0[style=dotted,label = "{DEF_USE}" ];
	Node0x8284be0 [shape=record,label="{  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %4)}"];
	Node0x8284c70 [shape=record,label="{\<\<ENTRY\>\> func}"];
	Node0x8284c70 -> Node0x82866d0;
	Node0x8284c70 -> Node0x8286950;
	Node0x8284c70 -> Node0x8286740;
	Node0x8284c70 -> Node0x82869c0;
	Node0x8284c70 -> Node0x82867b0;
	Node0x8284c70 -> Node0x8286af0;
	Node0x8284c70 -> Node0x8286b60;
	Node0x8284c70 -> Node0x8286bd0;
	Node0x8284c70 -> Node0x82849a0;
	Node0x8284c70 -> Node0x8284a30;
	Node0x8284c70 -> Node0x8286820;
	Node0x8284c70 -> Node0x8284ac0;
	Node0x8284c70 -> Node0x8284b50;
	Node0x8284c70 -> Node0x8284be0;
	Node0x8284c70 -> Node0x8284d00;
	Node0x8284c70 -> Node0x8289190[style=dashed];
	Node0x8284c70 -> Node0x82896c0[style=dashed];
	Node0x8284c70 -> Node0x8289440[style=dashed];
	Node0x8284c70 -> Node0x8289950[style=dashed];
	Node0x8284d00 [shape=record,label="{  ret void}"];
	Node0x82880f0 [shape=record,label="{struct.S1 : field - 0}"];
	Node0x82880f0 -> Node0x8288160[style=dotted, label="{S_FIELD}"];
	Node0x8288160 [shape=record,label="{  %s1 = alloca %struct.S1, align 8}"];
	Node0x8288160 -> Node0x82854c0[style=dotted,label = "{DEF_USE}" ];
	Node0x8287340 [shape=record,label="{struct.S1 : field - 1}"];
	Node0x8287340 -> Node0x8288160[style=dotted, label="{S_FIELD}"];
	Node0x82873b0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x82873b0 -> Node0x8287420;
	Node0x82873b0 -> Node0x8288160;
	Node0x82873b0 -> Node0x82874c0;
	Node0x82873b0 -> Node0x8287490;
	Node0x82873b0 -> Node0x82854c0;
	Node0x82873b0 -> Node0x82855c0;
	Node0x8287420 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x8287420 -> Node0x8287490[style=dotted,label = "{DEF_USE}" ];
	Node0x82874c0 [shape=record,label="{  %s2 = alloca %struct.S2, align 4}"];
	Node0x82874c0 -> Node0x82854c0[style=dotted,label = "{DEF_USE}" ];
	Node0x8287490 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x82854c0 [shape=record,label="{  call void @func(%struct.S1* %s1, %struct.S2* %s2)}"];
	Node0x82854c0 -> Node0x8284c70;
	Node0x82854c0 -> Node0x828b5c0[style=dashed];
	Node0x82854c0 -> Node0x828b9f0[style=dashed];
	Node0x82854c0 -> Node0x828b870[style=dashed];
	Node0x82854c0 -> Node0x828bc80[style=dashed];
	Node0x82855c0 [shape=record,label="{  ret i32 0}"];
	Node0x8285650 [shape=record,label="{struct.S2 : field - 0}"];
	Node0x8285650 -> Node0x82874c0[style=dotted, label="{S_FIELD}"];
	Node0x82856e0 [shape=record,label="{struct.S2 : field - 1}"];
	Node0x82856e0 -> Node0x82874c0[style=dotted, label="{S_FIELD}"];
	Node0x8289190 [shape=record,label="{FORMAL_IN:%struct.S1*}"];
	Node0x8289190 -> Node0x8289200[style=dashed];
	Node0x8289190 -> Node0x8289290[style=dashed];
	Node0x8289190 -> Node0x82896c0[style=dashed];
	Node0x8289190 -> Node0x8286740[style=dotted, label = "{DATA_GENERAL}"];
	Node0x8289200 [shape=record,label="{1 float}"];
	Node0x8289200 -> Node0x8289730[style=dashed];
	Node0x8289290 [shape=record,label="{2 %struct.S2*}"];
	Node0x8289290 -> Node0x8289330[style=dashed];
	Node0x8289290 -> Node0x82893a0[style=dashed];
	Node0x8289290 -> Node0x82897a0[style=dashed];
	Node0x8289290 -> Node0x82869c0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x8289330 [shape=record,label="{3 i32}"];
	Node0x8289330 -> Node0x8289840[style=dashed];
	Node0x82893a0 [shape=record,label="{4 i32}"];
	Node0x82893a0 -> Node0x82898b0[style=dashed];
	Node0x8289440 [shape=record,label="{FORMAL_IN:%struct.S2*}"];
	Node0x8289440 -> Node0x82871c0[style=dashed];
	Node0x8289440 -> Node0x8287230[style=dashed];
	Node0x8289440 -> Node0x8289950[style=dashed];
	Node0x8289440 -> Node0x82869c0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x82871c0 [shape=record,label="{6 i32}"];
	Node0x82871c0 -> Node0x82899c0[style=dashed];
	Node0x8287230 [shape=record,label="{7 i32}"];
	Node0x8287230 -> Node0x8289a30[style=dashed];
	Node0x82896c0 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x82896c0 -> Node0x8289730[style=dashed];
	Node0x82896c0 -> Node0x82897a0[style=dashed];
	Node0x82896c0 -> Node0x828b9f0[style=dashed];
	Node0x8289730 [shape=record,label="{1 float}"];
	Node0x8289730 -> Node0x828ba60[style=dashed];
	Node0x82897a0 [shape=record,label="{2 %struct.S2*}"];
	Node0x82897a0 -> Node0x8289840[style=dashed];
	Node0x82897a0 -> Node0x82898b0[style=dashed];
	Node0x82897a0 -> Node0x828bad0[style=dashed];
	Node0x8289840 [shape=record,label="{3 i32}"];
	Node0x8289840 -> Node0x828bb70[style=dashed];
	Node0x82898b0 [shape=record,label="{4 i32}"];
	Node0x82898b0 -> Node0x828bbe0[style=dashed];
	Node0x8289950 [shape=record,label="{FORMAL_OUT:%struct.S2*}"];
	Node0x8289950 -> Node0x82899c0[style=dashed];
	Node0x8289950 -> Node0x8289a30[style=dashed];
	Node0x8289950 -> Node0x828bc80[style=dashed];
	Node0x82899c0 [shape=record,label="{1 i32}"];
	Node0x82899c0 -> Node0x828bcf0[style=dashed];
	Node0x8289a30 [shape=record,label="{2 i32}"];
	Node0x8289a30 -> Node0x828bd60[style=dashed];
	Node0x828b5c0 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x828b5c0 -> Node0x828b630[style=dashed];
	Node0x828b5c0 -> Node0x828b6c0[style=dashed];
	Node0x828b5c0 -> Node0x8289190[style=dashed];
	Node0x828b630 [shape=record,label="{4 float}"];
	Node0x828b630 -> Node0x8289200[style=dashed];
	Node0x828b6c0 [shape=record,label="{5 %struct.S2*}"];
	Node0x828b6c0 -> Node0x828b760[style=dashed];
	Node0x828b6c0 -> Node0x828b7d0[style=dashed];
	Node0x828b6c0 -> Node0x8289290[style=dashed];
	Node0x828b760 [shape=record,label="{6 i32}"];
	Node0x828b760 -> Node0x8289330[style=dashed];
	Node0x828b7d0 [shape=record,label="{7 i32}"];
	Node0x828b7d0 -> Node0x82893a0[style=dashed];
	Node0x828b870 [shape=record,label="{ACTUAL_IN:%struct.S2*}"];
	Node0x828b870 -> Node0x828b8e0[style=dashed];
	Node0x828b870 -> Node0x828b950[style=dashed];
	Node0x828b870 -> Node0x8289440[style=dashed];
	Node0x828b8e0 [shape=record,label="{14 i32}"];
	Node0x828b8e0 -> Node0x82871c0[style=dashed];
	Node0x828b950 [shape=record,label="{15 i32}"];
	Node0x828b950 -> Node0x8287230[style=dashed];
	Node0x828b9f0 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x828b9f0 -> Node0x828ba60[style=dashed];
	Node0x828b9f0 -> Node0x828bad0[style=dashed];
	Node0x828ba60 [shape=record,label="{9 float}"];
	Node0x828bad0 [shape=record,label="{10 %struct.S2*}"];
	Node0x828bad0 -> Node0x828bb70[style=dashed];
	Node0x828bad0 -> Node0x828bbe0[style=dashed];
	Node0x828bb70 [shape=record,label="{11 i32}"];
	Node0x828bbe0 [shape=record,label="{12 i32}"];
	Node0x828bc80 [shape=record,label="{ACTUAL_OUT:%struct.S2*}"];
	Node0x828bc80 -> Node0x828bcf0[style=dashed];
	Node0x828bc80 -> Node0x828bd60[style=dashed];
	Node0x828bcf0 [shape=record,label="{17 i32}"];
	Node0x828bd60 [shape=record,label="{18 i32}"];
}
